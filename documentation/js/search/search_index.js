var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiResponseDto.html",[0,0.082,1,1.544]],["body/classes/ApiResponseDto.html",[0,0.084,1,2.129,2,1.447,3,0.362,4,0.362,5,0.362,6,4.822,7,2.393,8,0.457,9,1.789,10,1.761,11,3.869,12,4.357,13,3.806,14,4.071,15,1.911,16,4.441,17,2.948,18,1.931,19,5.608,20,1.258,21,4.441,22,1.221,23,0.032,24,1.221,25,0.864,26,4.441,27,1.99,28,4.441,29,2.575,30,3.297,31,3.422,32,3.297,33,2.752,34,0.408,35,1.221,36,0.408,37,3.223,38,3.297,39,3.297,40,3.297,41,3.297,42,0.022,43,0.022]],["title/modules/AppModule.html",[44,1.012,45,2.076]],["body/modules/AppModule.html",[0,0.083,3,0.357,4,0.357,5,0.357,23,0.033,25,0.5,34,0.759,36,0.402,42,0.022,43,0.022,44,1.565,45,4.017,46,1.308,47,1.308,48,1.707,49,1.707,50,1.425,51,2.31,52,1.707,53,2.71,54,2.71,55,3.334,56,3.023,57,3.023,58,3.023,59,2.31,60,1.707,61,1.425,62,2.71,63,2.833,64,0.794,65,2.357,66,1.707,67,3.247,68,3.247,69,0.823,70,3.247,71,1.38,72,3.247,73,3.247,74,3.247,75,4.395,76,2.71,77,2.833,78,3.247,79,3.247,80,2.71,81,2.357,82,2.357,83,2.71,84,2.357,85,2.71,86,1.556,87,2.357,88,1.308,89,2.71,90,2.357,91,2.357,92,1.882,93,2.357,94,2.093,95,1.425,96,3.247,97,3.247]],["title/entities/Article.html",[71,1.012,98,1.693]],["body/entities/Article.html",[0,0.087,3,0.377,4,0.377,5,0.377,8,0.475,9,1.836,17,2.869,18,1.714,20,1.31,23,0.032,25,0.9,27,2.164,29,2.185,34,0.565,36,0.425,42,0.023,43,0.023,69,1.094,71,1.432,92,1.987,94,2.938,98,2.396,99,2.861,100,2.455,101,3.717,102,4.275,103,2.692,104,3.301,105,4.275,106,3.428,107,4.558,108,4.558,109,3.428,110,4.877,111,3.428,112,4.558,113,3.428,114,4.275,115,3.428,116,3.805,117,3.428,118,3.428,119,3.428,120,4.558,121,1.802,122,1.643,123,1.802]],["title/controllers/ArticlesController.html",[124,1.544,125,2.076]],["body/controllers/ArticlesController.html",[0,0.037,1,2.785,3,0.157,4,0.157,5,0.157,8,0.199,10,1.315,18,1.628,20,0.939,22,1.551,23,0.032,24,1.551,25,0.972,27,1.551,34,0.613,35,0.531,36,0.178,37,1.04,42,0.012,43,0.012,64,0.35,69,0.829,71,1.799,95,0.629,103,2.724,122,0.687,124,1.135,125,1.526,126,1.196,127,1.04,128,2.036,129,0.954,130,1.541,131,1.526,132,1.976,133,2.932,134,1.976,135,2.036,136,1.196,137,2.201,138,4.245,139,3.662,140,1.433,141,0.954,142,1.433,143,1.976,144,2.515,145,2.986,146,2.367,147,3.95,148,3.762,149,3.762,150,4.947,151,4.947,152,2.699,153,1.433,154,1.687,155,1.196,156,1.433,157,1.433,158,2.986,159,1.976,160,1.433,161,1.196,162,1.433,163,3.512,164,1.976,165,4.632,166,3.866,167,1.433,168,1.196,169,1.433,170,1.976,171,1.433,172,1.196,173,1.433,174,1.753,175,2.367,176,1.976,177,1.433,178,1.196,179,2.685,180,1.433,181,2.367,182,1.433,183,1.718,184,1.718,185,1.433,186,1.433,187,1.04,188,1.59,189,1.196,190,1.196,191,1.718,192,1.196,193,1.04,194,3.216,195,4.218,196,1.718,197,1.04,198,0.753,199,0.924,200,1.196,201,1.196,202,1.196,203,1.04,204,1.04,205,0.924,206,1.433,207,1.433,208,0.753,209,1.433,210,1.04,211,1.433,212,0.924,213,1.04,214,3.039,215,3.72,216,1.433,217,1.687,218,1.433,219,3.245,220,1.196,221,1.433,222,1.433,223,1.433,224,1.433,225,1.433,226,1.433,227,1.433,228,1.433,229,1.433,230,1.433,231,1.433,232,1.433,233,1.433]],["title/modules/ArticlesModule.html",[44,1.012,55,1.867]],["body/modules/ArticlesModule.html",[0,0.098,3,0.421,4,0.421,5,0.421,23,0.032,34,0.746,36,0.475,42,0.024,43,0.024,44,1.698,46,1.545,47,1.545,48,2.016,49,2.016,50,1.683,51,2.842,52,2.016,55,3.594,57,3.166,59,2.578,60,2.016,61,1.683,63,3.161,64,0.937,65,2.783,66,2.016,71,1.204,95,2.152,125,3.485,188,3.166,189,3.201,203,2.783,234,3.201,235,3.835,236,3.201,237,3.835,238,3.835,239,3.835,240,3.835]],["title/injectables/ArticlesService.html",[188,1.693,241,0.931]],["body/injectables/ArticlesService.html",[0,0.044,3,0.191,4,0.191,5,0.191,8,0.241,10,1.51,15,1.608,17,2.878,20,1.078,22,1.781,23,0.033,24,1.781,25,0.74,34,0.637,36,0.216,42,0.014,43,0.014,64,0.426,66,0.916,69,1.181,71,1.887,94,1.123,100,1.329,101,1.264,103,2.622,104,1.123,121,0.916,122,0.835,128,2.003,129,1.117,130,1.516,131,1.788,132,2.315,133,2.884,134,2.315,135,2.284,136,2.315,137,2.409,141,2.123,154,1.846,161,2.315,166,3.289,168,2.315,172,2.315,174,1.01,178,2.315,179,2.892,188,1.458,190,1.454,191,2.013,192,1.454,202,1.454,203,1.264,217,1.733,241,0.802,242,0.835,243,1.454,244,3.078,245,1.742,246,2.86,247,2.526,248,1.742,249,2.773,250,1.742,251,2.878,252,2.773,253,1.742,254,1.742,255,1.742,256,1.742,257,1.742,258,1.742,259,1.454,260,1.123,261,2.773,262,2.884,263,2.508,264,2.315,265,1.123,266,1.123,267,1.742,268,2.013,269,2.579,270,3.825,271,4.582,272,1.742,273,3.397,274,4.582,275,4.582,276,1.742,277,1.264,278,3.456,279,0.764,280,1.742,281,1.264,282,2.54,283,1.742,284,1.454,285,1.123,286,1.454,287,1.742,288,1.742,289,1.742,290,1.742,291,1.264,292,1.454,293,1.742,294,2.773,295,1.742,296,2.773,297,3.94,298,1.742,299,3.94,300,2.773,301,1.742,302,1.742,303,1.742,304,1.454,305,1.01,306,1.454,307,1.454,308,1.454,309,1.742]],["title/controllers/AuthController.html",[124,1.544,310,2.076]],["body/controllers/AuthController.html",[0,0.055,1,2.574,3,0.239,4,0.239,5,0.239,8,0.301,10,1.249,20,0.995,22,1.473,23,0.032,24,1.473,25,0.931,27,1.473,34,0.695,35,0.805,36,0.269,42,0.016,43,0.016,61,1.947,64,0.531,69,1.067,95,0.953,98,1.142,122,1.041,124,1.041,127,1.577,129,1.326,138,2.886,139,3.235,141,1.326,143,2.749,144,2.378,145,3.235,147,3.221,148,3.221,149,3.221,152,2.563,154,1.602,158,2.86,183,1.577,184,1.577,187,1.577,193,1.577,194,3.221,195,3.898,196,2.39,197,1.577,198,1.142,199,1.4,204,1.577,205,2.122,210,1.577,212,1.4,213,1.577,214,2.886,215,3.361,217,1.602,244,2.89,251,2.638,264,1.813,269,1.041,310,2.122,311,1.813,312,1.813,313,2.39,314,2.122,315,3.704,316,1.813,317,2.909,318,2.172,319,4.437,320,3.293,321,3.976,322,3.704,323,3.293,324,2.39,325,2.172,326,2.172,327,2.172,328,2.749,329,2.172,330,1.813,331,2.638,332,2.172,333,3.293,334,3.293,335,3.293,336,3.293,337,3.293,338,1.578,339,2.39,340,2.749,341,2.172,342,2.172,343,1.813,344,2.09,345,1.813,346,1.813,347,2.39,348,2.749,349,1.4,350,2.172,351,2.172,352,2.172,353,2.172,354,2.172,355,2.172,356,3.293,357,2.172,358,2.172,359,2.172,360,2.172,361,1.4,362,2.172,363,1.4,364,2.172]],["title/modules/AuthModule.html",[44,1.012,56,1.693]],["body/modules/AuthModule.html",[0,0.088,3,0.381,4,0.381,5,0.381,23,0.033,34,0.741,36,0.429,42,0.023,43,0.023,44,1.617,46,1.396,47,1.396,48,1.821,49,1.821,50,1.52,51,2.706,52,1.821,56,3.26,58,3.08,59,2.413,60,1.821,61,1.52,63,2.959,64,0.847,95,2.014,198,1.821,310,3.318,344,3.08,345,2.892,361,2.233,365,2.892,366,3.465,367,2.892,368,3.08,369,2.892,370,3.465,371,3.465,372,4.59,373,3.465,374,2.515,375,3.465,376,2.892,377,3.332,378,2.892,379,2.515,380,3.465,381,2.515,382,3.465,383,3.465,384,2.233,385,3.465,386,3.465,387,3.465,388,3.465,389,3.465]],["title/injectables/AuthService.html",[241,0.931,344,1.693]],["body/injectables/AuthService.html",[0,0.058,3,0.25,4,0.25,5,0.25,8,0.316,10,1.529,13,1.469,15,1.979,18,1.75,20,1.092,22,1.804,23,0.033,24,1.804,25,0.75,34,0.657,36,0.282,42,0.017,43,0.017,61,1,64,0.557,69,0.957,86,1.093,88,0.918,122,1.093,129,1.375,141,1.375,145,1.469,154,1.831,208,1.795,217,1.961,241,0.987,242,1.093,244,3.067,251,2.864,268,2.478,269,2.334,273,2.201,277,1.655,284,1.903,285,1.469,286,1.903,296,2.93,305,1.321,313,2.478,314,3.138,315,2.85,316,2.85,317,2.822,322,1.903,324,1.655,330,2.85,331,2.559,338,1.637,339,1.655,340,1.903,344,1.795,346,1.903,347,2.478,348,1.903,361,3.294,374,1.655,390,1.903,391,3.414,392,1.903,393,2.243,394,5.299,395,2.279,396,2.279,397,3.414,398,2.279,399,2.279,400,3.414,401,3.417,402,2.279,403,1.903,404,2.279,405,1.903,406,2.478,407,2.478,408,2.279,409,3.414,410,2.279,411,1.655,412,1.655,413,1.469,414,1.655,415,1.469,416,1.655,417,1.655,418,1.655,419,2.478,420,2.279,421,2.279,422,2.279,423,1.655,424,2.279,425,1.903,426,2.279,427,1.903,428,2.279,429,3.414,430,2.279,431,2.279,432,2.279,433,1.903,434,2.279,435,1.903,436,1.655,437,3.414,438,2.279,439,2.279,440,2.279,441,4.094,442,2.279,443,2.478,444,2.279,445,2.279,446,2.279,447,2.279,448,2.279,449,1.903,450,2.279,451,2.279,452,1.903,453,2.279,454,1.903,455,2.279,456,2.279]],["title/injectables/CaslAbilityFactory.html",[241,0.931,247,1.693]],["body/injectables/CaslAbilityFactory.html",[0,0.094,2,1.114,3,0.279,4,0.279,5,0.279,8,0.352,10,0.797,20,0.569,22,1.37,23,0.033,24,1.37,25,0.845,34,0.594,36,0.594,42,0.018,43,0.018,64,0.621,69,1.09,71,1.765,100,1.772,101,3.165,103,1.335,104,1.637,122,1.217,128,1.472,129,1.49,130,1.623,135,2.777,141,1.023,154,1.023,174,2.143,200,2.12,217,1.49,241,1.069,242,1.217,247,1.944,260,1.637,263,3.165,265,1.637,266,2.383,269,1.217,270,2.12,277,3.477,279,1.623,281,1.843,282,2.811,285,1.637,291,3.165,304,3.64,305,1.472,306,2.12,307,3.087,308,2.12,363,1.637,401,2.12,436,1.843,457,2.383,458,1.637,459,3.698,460,3.698,461,2.539,462,2.539,463,3.698,464,3.698,465,3.64,466,3.64,467,2.12,468,2.143,469,2.12,470,2.684,471,2.539,472,3.698,473,2.539,474,2.539,475,2.539,476,1.843,477,2.539,478,2.539,479,2.539,480,2.684,481,2.539,482,4.361,483,3.087,484,2.539,485,2.539,486,2.12,487,3.087,488,2.539,489,2.539,490,3.087,491,2.539,492,2.539,493,2.539,494,1.637,495,2.539,496,2.539,497,2.539,498,2.539,499,2.539,500,2.12,501,2.539,502,2.539,503,4.361,504,2.539,505,2.539,506,1.843,507,2.539,508,2.12,509,1.637,510,3.698,511,2.12,512,2.539,513,2.12,514,2.539,515,2.12,516,2.539,517,2.539,518,2.539,519,2.539,520,2.539]],["title/modules/CaslModule.html",[44,1.012,57,1.693]],["body/modules/CaslModule.html",[0,0.102,3,0.438,4,0.438,5,0.438,23,0.032,34,0.623,36,0.494,42,0.025,43,0.025,44,1.816,46,2.025,47,1.607,48,2.096,49,2.096,50,1.75,51,2.894,52,2.894,57,3.247,59,2.643,60,2.096,61,1.75,64,0.975,247,3.376,262,3.329,266,3.241,452,3.329,521,3.329,522,3.329,523,3.329,524,3.988,525,5.506,526,3.988,527,3.988,528,3.988]],["title/classes/CreateArticleDto.html",[0,0.082,137,1.693]],["body/classes/CreateArticleDto.html",[0,0.116,2,1.508,3,0.378,4,0.378,5,0.378,8,0.476,9,1.839,10,1.434,18,1.716,20,1.15,23,0.032,25,0.79,27,1.9,29,2.458,31,3.167,34,0.566,35,1.273,36,0.426,37,3.314,42,0.023,43,0.023,71,1.903,102,4.98,104,3.305,105,4.747,116,3.812,137,2.4,144,2.355,170,3.812,279,2.25,529,4.561,530,2.495,531,3.305,532,5.464,533,3.437,534,3.437,535,4.566,536,3.437,537,3.437,538,3.437,539,3.437,540,3.722,541,5.128,542,2.869,543,4.566,544,4.566,545,1.992,546,3.437]],["title/injectables/JwtStrategy.html",[241,0.931,368,1.693]],["body/injectables/JwtStrategy.html",[0,0.084,3,0.36,4,0.36,5,0.36,8,0.455,10,1.39,15,1.901,17,1.724,18,1.39,20,0.992,22,1.639,23,0.032,24,1.639,25,0.826,29,1.572,34,0.694,36,0.406,42,0.022,43,0.022,56,1.724,64,0.802,69,1.004,86,1.572,88,1.321,122,1.572,129,1.783,141,1.321,154,1.321,198,1.724,208,1.724,212,2.114,217,1.321,241,1.28,242,1.572,244,2.633,251,2.326,269,2.121,273,2.114,296,2.114,338,1.572,368,2.326,377,2.381,378,2.738,379,2.381,381,2.381,392,2.738,393,2.531,403,3.694,405,2.738,411,2.381,412,2.381,413,2.114,414,2.381,415,2.114,416,2.381,417,2.381,418,2.381,419,3.212,423,2.381,425,2.738,547,2.738,548,3.694,549,4.425,550,4.425,551,3.28,552,4.425,553,4.425,554,3.28,555,3.28,556,3.28,557,3.28,558,2.381,559,3.28,560,3.28,561,3.28,562,3.28,563,3.28,564,2.738,565,3.28,566,3.28]],["title/classes/LoginAuthDto.html",[0,0.082,317,1.867]],["body/classes/LoginAuthDto.html",[0,0.126,2,1.713,3,0.429,4,0.429,5,0.429,8,0.541,9,1.998,18,1.802,20,1.112,23,0.032,25,0.764,27,1.838,31,3.16,34,0.615,35,1.446,36,0.484,42,0.025,43,0.025,69,0.929,88,2.386,144,2.311,279,2.177,317,2.875,338,2.838,531,3.197,540,3.958,545,2.263,567,3.958,568,2.834,569,4.141,570,3.259,571,3.904,572,4.141,573,3.259,574,3.259,575,4.141]],["title/classes/LoginResponseDto.html",[0,0.082,349,2.076]],["body/classes/LoginResponseDto.html",[0,0.111,2,1.909,3,0.478,4,0.478,5,0.478,7,3.158,8,0.603,9,2.138,18,1.667,20,0.976,23,0.032,25,0.67,27,1.612,31,3.076,33,3.632,34,0.539,35,1.612,36,0.539,42,0.026,43,0.026,144,2.138,279,1.909,349,3.42,361,3.42,427,4.78,531,2.804,567,3.852,576,5.306,577,4.43]],["title/classes/RegisterAuthDto.html",[0,0.082,331,1.693]],["body/classes/RegisterAuthDto.html",[0,0.12,2,1.584,3,0.396,4,0.396,5,0.396,8,0.5,9,1.9,18,1.861,20,1.178,23,0.032,25,0.809,27,1.946,31,3.228,34,0.584,35,1.337,36,0.447,42,0.023,43,0.023,69,0.983,86,2.77,88,2.328,144,2.388,279,2.305,331,2.479,338,2.77,531,3.386,540,4.043,542,3.013,545,2.092,568,2.62,569,3.937,570,3.013,572,3.937,573,3.013,574,3.013,575,3.937,578,4.649,579,3.61,580,3.61,581,4.716,582,3.61,583,3.61]],["title/injectables/ResponseTransformInterceptor.html",[77,2.076,241,0.931]],["body/injectables/ResponseTransformInterceptor.html",[0,0.085,1,2.304,3,0.243,4,0.243,5,0.243,8,0.307,10,0.695,11,3.688,12,3.251,13,3.688,14,3.49,18,0.695,20,0.496,22,0.82,23,0.033,24,0.82,25,0.341,34,0.555,36,0.274,42,0.016,43,0.016,64,0.541,77,2.153,123,1.163,129,1.345,130,0.971,139,1.427,141,1.937,145,1.427,152,1.427,154,0.892,174,1.283,176,1.847,184,1.606,205,1.427,217,1.937,241,0.966,242,1.061,269,2.515,273,2.153,292,1.847,314,1.427,339,1.606,343,1.847,363,1.427,407,3.251,413,2.592,443,2.424,476,2.424,483,1.847,487,1.847,500,1.847,515,3.739,545,1.283,584,2.788,585,1.847,586,3.339,587,3.339,588,4.479,589,4.479,590,2.213,591,2.213,592,4.022,593,3.339,594,4.807,595,1.847,596,2.213,597,2.213,598,2.213,599,2.213,600,2.213,601,2.213,602,2.213,603,3.357,604,2.213,605,2.213,606,2.213,607,2.213,608,2.213,609,2.213,610,2.213,611,2.213,612,2.213,613,2.213,614,2.213,615,1.847,616,2.788,617,2.213,618,4.479,619,1.847,620,2.213,621,4.022,622,2.213,623,1.847,624,2.213,625,3.339,626,3.339,627,2.213,628,2.213,629,3.339,630,4.479,631,4.022,632,5.527,633,2.213,634,2.213,635,2.213,636,1.847,637,2.213,638,2.213,639,2.788,640,2.213,641,4.479,642,2.788,643,1.847,644,2.213,645,1.847,646,2.213,647,2.213,648,2.213,649,2.213,650,3.339,651,3.339,652,2.213,653,2.213,654,1.847,655,1.847,656,2.213,657,2.213,658,2.213,659,2.213,660,2.213,661,2.213,662,2.213,663,2.213,664,1.847,665,2.213,666,2.213]],["title/classes/UpdateArticleDto.html",[0,0.082,179,1.867]],["body/classes/UpdateArticleDto.html",[0,0.118,2,2.025,3,0.507,4,0.507,5,0.507,23,0.032,34,0.681,35,1.71,36,0.572,42,0.027,43,0.027,130,2.025,137,2.426,179,3.187,191,3.35,530,3.35,548,4.59,667,3.852,668,5.498,669,4.615]],["title/entities/User.html",[69,0.603,98,1.693]],["body/entities/User.html",[0,0.081,3,0.349,4,0.349,5,0.349,8,0.44,9,1.744,10,1.36,17,2.275,18,1.794,20,1.281,23,0.032,25,0.901,27,2.117,29,2.075,34,0.536,36,0.536,42,0.021,43,0.021,69,0.811,71,1.794,86,2.361,88,2.131,92,1.841,94,3.41,98,2.275,100,2.075,103,2.589,110,4.621,114,4.112,121,1.669,123,1.669,128,2.855,265,2.047,338,2.361,468,2.855,469,2.651,494,2.79,509,3.175,619,3.614,636,3.614,670,2.305,671,3.175,672,4.329,673,3.175,674,4.329,675,3.175,676,3.175,677,3.175,678,3.175,679,3.175,680,3.175,681,3.175,682,4.329,683,3.142,684,4.329,685,3.175,686,3.175,687,3.175,688,3.175]],["title/controllers/UsersController.html",[124,1.544,689,2.076]],["body/controllers/UsersController.html",[0,0.069,1,2.499,3,0.296,4,0.296,5,0.296,8,0.374,10,1.213,11,2.49,20,0.866,22,1.431,23,0.032,24,1.431,25,0.909,27,1.431,34,0.692,35,1,36,0.334,42,0.019,43,0.019,64,0.66,69,1.046,95,1.184,124,1.293,127,1.959,129,1.556,131,2.49,138,3.785,139,3.601,144,2.302,147,2.804,148,3.577,149,3.577,152,2.49,154,1.818,155,2.252,158,3.176,159,3.225,187,1.959,193,1.959,194,3.276,195,3.785,196,3.276,197,1.959,198,1.418,199,1.739,204,1.959,205,1.739,208,1.418,210,2.804,212,1.739,213,1.959,214,2.804,215,3.176,217,1.556,219,4.113,220,2.252,244,2.372,251,2.031,279,1.184,328,4.353,368,1.418,393,1.98,506,2.804,558,1.959,639,2.252,643,4.113,654,2.252,689,2.49,690,2.252,691,3.785,692,3.863,693,2.698,694,3.863,695,2.698,696,2.698,697,2.698,698,2.698,699,2.252,700,1.959,701,2.698,702,2.698,703,3.225,704,2.698,705,3.863,706,2.698,707,2.698,708,2.698,709,2.698,710,2.698]],["title/modules/UsersModule.html",[44,1.012,58,1.693]],["body/modules/UsersModule.html",[0,0.099,3,0.426,4,0.426,5,0.426,23,0.032,34,0.732,36,0.481,42,0.024,43,0.024,44,1.707,46,1.563,47,1.563,48,2.04,49,2.04,50,1.703,51,2.858,52,2.858,58,3.227,59,2.597,60,2.04,61,1.703,63,2.501,64,0.949,65,2.817,66,2.04,69,0.727,95,2.168,393,2.808,689,3.504,699,3.239,700,2.817,711,3.239,712,3.239,713,3.239,714,3.881,715,3.881,716,3.881]],["title/injectables/UsersService.html",[241,0.931,393,1.413]],["body/injectables/UsersService.html",[0,0.067,3,0.287,4,0.287,5,0.287,8,0.363,10,1.526,15,2.19,17,2.331,18,1.393,20,1.155,22,1.8,23,0.033,24,1.8,25,0.748,34,0.686,36,0.324,42,0.019,43,0.019,64,0.64,66,1.375,69,0.83,88,1.787,103,1.986,121,1.375,123,1.375,129,1.522,130,1.658,131,3.131,154,1.957,217,2.076,241,1.093,242,1.254,244,3.154,246,3.526,251,2.979,259,2.184,265,1.686,268,1.899,269,2.47,296,2.859,331,2.822,338,1.811,347,1.899,393,1.658,406,2.743,411,2.743,412,2.743,413,2.436,414,2.743,415,2.436,416,2.743,417,2.743,418,2.743,419,3.526,468,2.571,508,2.184,509,1.686,691,1.899,700,1.899,717,2.184,718,3.779,719,3.779,720,2.616,721,2.616,722,3.779,723,3.779,724,2.616,725,2.616,726,3.779,727,2.616,728,3.779,729,2.616,730,2.616,731,2.616,732,2.616,733,3.779,734,3.779,735,2.616,736,2.184,737,3.779,738,2.616,739,2.616,740,2.616,741,2.184,742,2.616,743,2.616,744,2.616]],["title/coverage.html",[745,3.173]],["body/coverage.html",[0,0.145,1,1.493,5,0.342,6,2.599,7,3.101,23,0.032,25,0.751,42,0.021,43,0.021,50,1.367,69,0.583,71,0.978,77,2.007,98,2.245,99,2.599,124,2.337,125,2.007,126,2.599,137,1.637,141,1.254,179,1.805,188,1.637,241,1.642,243,2.599,247,1.637,260,2.007,310,2.007,311,2.599,317,1.805,331,1.637,344,1.637,349,2.007,368,1.637,390,2.599,393,1.367,457,3.143,458,3.143,480,2.26,511,3.566,529,2.599,530,3.101,547,2.599,567,3.101,568,3.101,578,2.599,584,2.599,585,2.599,667,2.599,670,2.26,689,2.007,690,2.599,717,2.599,745,2.26,746,2.599,747,3.114,748,3.114,749,6.467,750,4.876,751,4.876,752,2.599,753,2.599,754,2.599,755,6.01,756,3.101,757,3.101,758,4.272,759,2.599,760,2.599,761,2.26,762,3.114,763,3.114,764,4.876,765,4.876,766,4.272,767,3.114,768,3.114]],["title/dependencies.html",[47,1.558,769,2.255]],["body/dependencies.html",[0,0.105,23,0.033,35,1.52,42,0.025,43,0.025,47,1.653,64,1.003,66,2.156,76,3.424,121,2.156,198,2.156,199,3.299,208,2.156,374,2.978,406,2.978,467,3.424,545,2.378,558,4.049,595,3.424,770,4.102,771,5.578,772,5.117,773,4.102,774,4.102,775,4.102,776,4.102,777,4.102,778,4.102,779,4.102,780,4.102,781,4.102,782,4.102,783,4.102,784,4.102,785,4.102,786,4.102,787,4.102,788,3.424,789,4.102,790,4.102,791,4.102]],["title/miscellaneous/enumerations.html",[792,1.186,793,3.228]],["body/miscellaneous/enumerations.html",[8,0.601,23,0.032,42,0.026,43,0.026,100,2.538,130,2.324,135,3.07,174,3.07,263,3.844,282,3.413,457,2.795,458,3.413,468,3.07,470,3.844,494,3.413,670,3.148,683,3.844,792,1.903,793,3.62,794,3.62,795,4.336,796,5.3]],["title/miscellaneous/functions.html",[792,1.186,797,3.228]],["body/miscellaneous/functions.html",[8,0.668,23,0.028,42,0.028,43,0.028,50,2.625,752,4.025,753,4.71,754,4.993,761,3.5,792,2.116,797,4.025,798,4.821,799,4.821]],["title/index.html",[8,0.375,800,2.255,801,2.255]],["body/index.html",[3,0.309,4,0.195,11,2.567,12,1.289,13,1.144,14,1.289,23,0.031,29,1.35,42,0.014,43,0.014,44,0.558,46,0.715,47,0.715,62,3.324,69,0.865,71,1.099,80,1.482,81,2.891,82,1.289,84,1.289,86,0.851,87,1.289,88,0.715,90,3.152,91,1.289,93,2.044,100,1.909,121,2.64,123,0.933,128,2.678,130,1.236,135,1.632,144,0.715,158,1.144,164,1.482,183,2.54,208,1.839,215,1.144,246,2.044,266,2.978,279,2.326,281,1.289,282,1.144,285,1.144,291,2.891,305,2.028,312,1.482,313,1.289,314,1.144,324,2.044,363,1.144,369,1.482,376,1.482,377,2.044,379,1.289,381,2.044,384,1.144,407,1.289,415,1.144,423,1.289,433,1.482,435,2.35,436,1.289,443,1.289,449,2.921,454,1.482,468,1.029,470,1.289,476,1.289,490,2.35,494,2.567,506,1.289,509,2.256,513,1.482,564,1.482,577,2.35,603,1.482,615,2.921,616,2.35,623,1.482,642,2.35,645,3.857,655,2.921,683,2.54,691,2.044,703,2.921,741,1.482,745,1.289,746,2.921,756,2.044,757,2.044,761,1.289,788,3.625,800,1.482,801,1.482,802,2.816,803,3.499,804,3.982,805,1.775,806,1.775,807,2.816,808,1.775,809,1.775,810,1.775,811,1.775,812,3.499,813,1.775,814,2.816,815,3.857,816,3.499,817,4.842,818,1.775,819,1.289,820,2.816,821,1.775,822,1.775,823,3.499,824,1.775,825,1.775,826,2.816,827,1.775,828,1.775,829,1.775,830,1.775,831,2.816,832,3.499,833,2.35,834,1.775,835,2.816,836,1.775,837,1.775,838,2.816,839,1.775,840,1.775,841,1.775,842,1.775,843,1.775,844,6.025,845,1.775,846,3.499,847,2.816,848,1.775,849,1.775,850,1.775,851,1.775,852,1.775,853,1.775,854,1.775,855,1.775,856,2.816,857,1.775,858,2.816,859,1.775,860,1.775,861,1.775,862,1.775,863,1.775,864,3.499,865,1.775,866,1.482,867,1.775,868,5.83,869,2.816,870,1.775,871,2.816,872,1.775,873,1.775,874,1.775,875,1.775,876,1.775,877,1.775,878,1.775,879,1.775,880,1.775,881,1.775,882,1.775,883,1.775,884,1.775,885,1.775,886,1.775,887,1.775,888,1.775,889,1.775,890,1.775,891,2.35,892,3.982,893,2.816,894,1.775,895,1.775,896,1.775,897,1.775,898,2.816,899,1.775,900,2.816,901,2.816,902,3.499,903,2.816,904,3.982,905,2.816,906,2.816,907,1.775,908,1.775,909,2.816,910,1.775,911,1.775,912,1.775,913,1.775,914,1.775,915,1.775,916,1.775,917,1.775,918,1.775,919,1.775,920,1.775,921,1.775,922,1.775,923,1.775,924,1.775,925,1.775,926,3.499,927,1.775,928,1.775,929,1.775,930,1.775,931,1.775,932,1.775,933,1.775,934,1.775,935,1.775,936,1.775,937,1.775,938,1.775,939,2.816,940,2.816,941,1.775,942,1.775,943,1.775,944,1.775,945,1.775,946,1.775,947,1.775,948,1.775,949,1.775,950,1.482]],["title/modules.html",[46,1.761]],["body/modules.html",[23,0.027,42,0.027,43,0.027,45,2.985,46,1.866,55,2.685,56,2.434,57,2.434,58,2.434,833,5.19,951,6.218,952,6.218,953,6.218]],["title/overview.html",[819,3.173]],["body/overview.html",[2,1.562,23,0.032,42,0.023,43,0.023,44,1.118,45,4.018,46,1.434,47,1.434,48,1.871,49,1.871,50,1.562,51,1.871,52,1.871,53,2.972,54,2.972,55,3.488,56,3.246,57,3.163,58,3.163,59,2.456,60,1.871,61,1.562,92,2.064,95,1.562,188,2.742,234,2.972,236,2.972,242,1.706,247,3.163,344,2.742,365,2.972,367,2.972,368,2.742,393,2.641,486,2.972,521,2.972,522,2.972,523,2.972,711,2.972,712,2.972,713,2.972,819,2.584,866,2.972,954,3.56,955,4.673]],["title/properties.html",[9,1.558,769,2.255]],["body/properties.html",[9,1.972,23,0.032,42,0.028,43,0.028,100,2.346,144,1.972,950,4.085,956,4.894,957,4.894,958,4.894]],["title/miscellaneous/typealiases.html",[792,1.186,959,3.867]],["body/miscellaneous/typealiases.html",[8,0.663,23,0.029,25,0.737,42,0.028,43,0.028,260,3.621,457,3.085,458,3.844,465,3.995,466,3.995,480,4.078,792,2.1,794,4.689,960,4.786]],["title/miscellaneous/variables.html",[384,2.493,792,1.186]],["body/miscellaneous/variables.html",[8,0.543,23,0.032,25,0.765,29,2.382,42,0.025,43,0.025,69,0.733,71,1.23,81,2.842,82,2.842,83,3.269,84,2.842,85,3.269,86,1.877,87,2.842,88,1.577,89,3.269,90,2.842,91,2.842,92,2.27,93,2.842,123,2.87,141,1.577,201,3.269,305,2.27,384,2.524,664,4.149,736,3.269,756,2.842,757,3.963,759,4.149,760,4.557,792,1.718,796,4.149,815,4.557,891,3.269,961,4.97,962,3.916,963,3.916,964,3.916,965,3.916,966,3.916,967,4.97,968,3.916,969,3.916,970,3.916,971,3.916,972,3.916,973,3.916]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":957,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["1.0.0",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":736,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["11.0.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["12345678",{"_index":572,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{}}}],["1h",{"_index":387,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":486,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"overview.html":{}}}],["200",{"_index":158,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["201",{"_index":143,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{}}}],["204",{"_index":175,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["3",{"_index":866,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.14.1",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["401",{"_index":148,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["403",{"_index":150,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["404",{"_index":165,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["409",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":954,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":955,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["6.7.3",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":270,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["ability.can(action",{"_index":518,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["ability.cannot(action.create",{"_index":272,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["ability.cannot(action.delete",{"_index":302,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["ability.cannot(action.read",{"_index":294,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["ability.cannot(action.update",{"_index":300,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["ability.factory",{"_index":262,"title":{},"body":{"injectables/ArticlesService.html":{},"modules/CaslModule.html":{}}}],["ability.factory.ts",{"_index":458,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory.ts:26",{"_index":461,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilitybuilder",{"_index":462,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilitybuilder(pureability",{"_index":491,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilityclass",{"_index":463,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["accepts",{"_index":477,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["access",{"_index":577,"title":{},"body":{"classes/LoginResponseDto.html":{},"index.html":{}}}],["accesstoken",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["action",{"_index":263,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{}}}],["actions",{"_index":472,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["actual",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["add",{"_index":507,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["adding",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["adjust",{"_index":200,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/CaslAbilityFactory.html":{}}}],["admin",{"_index":494,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["admin@123",{"_index":882,"title":{},"body":{"index.html":{}}}],["admins",{"_index":498,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["alias",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":960,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["any).error",{"_index":635,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["any).message",{"_index":634,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["anything",{"_index":495,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["api",{"_index":817,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":196,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":194,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":31,"title":{},"body":{"classes/ApiResponseDto.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{}}}],["apiproperty({example",{"_index":531,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{}}}],["apiproperty({required",{"_index":28,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["apiresponse",{"_index":195,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apiresponsedto",{"_index":1,"title":{"classes/ApiResponseDto.html":{}},"body":{"classes/ApiResponseDto.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["apiresponsedto(httpstatus.ok",{"_index":613,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["apiresponsedto(statuscode",{"_index":621,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["apiresponseerror",{"_index":665,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["apis",{"_index":810,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":193,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('articles",{"_index":206,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["apitags('auth",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":701,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["app.module.ts",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_interceptor",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["appability",{"_index":260,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["application",{"_index":890,"title":{},"body":{"index.html":{}}}],["apply",{"_index":876,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":45,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":517,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["array",{"_index":636,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{}}}],["array.isarray(message",{"_index":637,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["article",{"_index":71,"title":{"entities/Article.html":{}},"body":{"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{},"entities/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["article'})@apiresponse({status",{"_index":142,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["article'})@isnotempty()@isstring",{"_index":533,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article'})@isnotempty()@isstring()@minlength(3",{"_index":538,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.author",{"_index":672,"title":{},"body":{"entities/User.html":{}}}],["article.dto",{"_index":191,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/UpdateArticleDto.html":{}}}],["article.dto.ts",{"_index":530,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:14",{"_index":534,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:19",{"_index":537,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:9",{"_index":539,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.ispublished",{"_index":309,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articles",{"_index":128,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"entities/User.html":{},"index.html":{}}}],["articles'})@apiresponse({status",{"_index":157,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["articles.controller",{"_index":238,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["articles.service",{"_index":189,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{}}}],["articles/entities/article.entity",{"_index":469,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"entities/User.html":{}}}],["articlescontroller",{"_index":125,"title":{"controllers/ArticlesController.html":{}},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"coverage.html":{}}}],["articlesmodule",{"_index":55,"title":{"modules/ArticlesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules.html":{},"overview.html":{}}}],["articlesrepository",{"_index":249,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlesservice",{"_index":188,"title":{"injectables/ArticlesService.html":{}},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"coverage.html":{},"overview.html":{}}}],["assuming",{"_index":264,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{}}}],["async",{"_index":244,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["attempt",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["auth.controller",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["auth.dto.ts",{"_index":568,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{},"coverage.html":{}}}],["auth.dto.ts:12",{"_index":574,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{}}}],["auth.dto.ts:17",{"_index":580,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["auth.dto.ts:7",{"_index":582,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["auth.dto.ts:8",{"_index":571,"title":{},"body":{"classes/LoginAuthDto.html":{}}}],["auth.service",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/dto/register",{"_index":731,"title":{},"body":{"injectables/UsersService.html":{}}}],["auth/login",{"_index":921,"title":{},"body":{"index.html":{}}}],["auth/logout",{"_index":922,"title":{},"body":{"index.html":{}}}],["auth/register",{"_index":920,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":310,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":703,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["authentication)'})@apiresponse({status",{"_index":694,"title":{},"body":{"controllers/UsersController.html":{}}}],["authguard",{"_index":197,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":56,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":100,"title":{},"body":{"entities/Article.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"properties.html":{}}}],["author1",{"_index":883,"title":{},"body":{"index.html":{}}}],["author@123",{"_index":884,"title":{},"body":{"index.html":{}}}],["authorid",{"_index":101,"title":{},"body":{"entities/Article.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["authorized",{"_index":275,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["authservice",{"_index":344,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":527,"title":{},"body":{"modules/CaslModule.html":{}}}],["await",{"_index":296,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["bad",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["based",{"_index":281,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["basic",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["bcrypt",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(registerauthdto.password",{"_index":735,"title":{},"body":{"injectables/UsersService.html":{}}}],["being",{"_index":687,"title":{},"body":{"entities/User.html":{}}}],["blacklist",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["blacklisting",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":184,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["boilerplate",{"_index":802,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":116,"title":{},"body":{"entities/Article.html":{},"classes/CreateArticleDto.html":{}}}],["bootstrap",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":953,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":951,"title":{},"body":{"modules.html":{}}}],["build",{"_index":490,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["building",{"_index":808,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":589,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["can(action.create",{"_index":502,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.delete",{"_index":504,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.manage",{"_index":493,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.read",{"_index":496,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.update",{"_index":503,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["casl",{"_index":266,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"index.html":{}}}],["casl.git",{"_index":853,"title":{},"body":{"index.html":{}}}],["casl/ability",{"_index":467,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"dependencies.html":{}}}],["casl/casl",{"_index":261,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["casl/casl.module",{"_index":239,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["caslabilityfactory",{"_index":247,"title":{"injectables/CaslAbilityFactory.html":{}},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"coverage.html":{},"overview.html":{}}}],["caslmodule",{"_index":57,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["catcherror",{"_index":597,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["catcherror(err",{"_index":624,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["cd",{"_index":854,"title":{},"body":{"index.html":{}}}],["change",{"_index":861,"title":{},"body":{"index.html":{}}}],["check",{"_index":614,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["class",{"_index":0,"title":{"classes/ApiResponseDto.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateArticleDto.html":{}},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiResponseDto.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateArticleDto.html":{},"overview.html":{}}}],["cli",{"_index":832,"title":{},"body":{"index.html":{}}}],["client",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["clone",{"_index":846,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlesmodule",{"_index":234,"title":{},"body":{"modules/ArticlesModule.html":{},"overview.html":{}}}],["cluster_articlesmodule_imports",{"_index":235,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["cluster_articlesmodule_providers",{"_index":236,"title":{},"body":{"modules/ArticlesModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":366,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":521,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":523,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_providers",{"_index":522,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":711,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":712,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":713,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":900,"title":{},"body":{"index.html":{}}}],["column",{"_index":110,"title":{},"body":{"entities/Article.html":{},"entities/User.html":{}}}],["column('text",{"_index":112,"title":{},"body":{"entities/Article.html":{}}}],["column({default",{"_index":117,"title":{},"body":{"entities/Article.html":{}}}],["column({select",{"_index":677,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":679,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":674,"title":{},"body":{"entities/User.html":{}}}],["common",{"_index":662,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["complex",{"_index":286,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{}}}],["compodoc/compodoc",{"_index":935,"title":{},"body":{"index.html":{}}}],["condition",{"_index":505,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["conditions",{"_index":307,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["config",{"_index":909,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":857,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["conflictexception('email",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":860,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":664,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["console.log('authenticated",{"_index":704,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log(`logout",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":269,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/ApiResponseDto.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(articlesrepository",{"_index":245,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["constructor(private",{"_index":212,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["constructor(statuscode",{"_index":16,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["constructor(usersrepository",{"_index":720,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["content",{"_index":102,"title":{},"body":{"entities/Article.html":{},"classes/CreateArticleDto.html":{}}}],["context",{"_index":591,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["context.switchtohttp",{"_index":602,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["control",{"_index":812,"title":{},"body":{"index.html":{}}}],["controller",{"_index":124,"title":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":211,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["controller('auth",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":702,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["core",{"_index":918,"title":{},"body":{"index.html":{}}}],["core/common/dto/api",{"_index":204,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["core/common/interceptors/response",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["core/database/migrations/*{.ts,.js",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":745,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":130,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["create(@body",{"_index":216,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["create(createarticledto",{"_index":136,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["create(registerauthdto",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["createarticledto",{"_index":137,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["created",{"_index":146,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["createforuser",{"_index":459,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createforuser(user",{"_index":460,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["creates",{"_index":872,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["crucial",{"_index":513,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["crud",{"_index":823,"title":{},"body":{"index.html":{}}}],["current",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["custom",{"_index":649,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["data",{"_index":11,"title":{},"body":{"classes/ApiResponseDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["data.message",{"_index":622,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["database",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource(datasourceoptions",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":859,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":27,"title":{},"body":{"classes/ApiResponseDto.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":123,"title":{},"body":{"entities/Article.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"classes/ApiResponseDto.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":174,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["delete(':id",{"_index":228,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":173,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["deleted",{"_index":176,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["deleting",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["demonstrating",{"_index":805,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":47,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depending",{"_index":288,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["description",{"_index":144,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":164,"title":{},"body":{"controllers/ArticlesController.html":{},"index.html":{}}}],["detectsubjecttype",{"_index":510,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["dev",{"_index":899,"title":{},"body":{"index.html":{}}}],["development",{"_index":891,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["different",{"_index":849,"title":{},"body":{"index.html":{}}}],["direct",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["disable",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["doc",{"_index":933,"title":{},"body":{"index.html":{}}}],["docs",{"_index":835,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":746,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/api",{"_index":599,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["dto/create",{"_index":190,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dto/login",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":192,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dtos",{"_index":912,"title":{},"body":{"index.html":{}}}],["e.g",{"_index":616,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["e2e",{"_index":906,"title":{},"body":{"index.html":{}}}],["eager",{"_index":108,"title":{},"body":{"entities/Article.html":{}}}],["email",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["endpoints",{"_index":919,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":657,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["enough",{"_index":484,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["ensure",{"_index":642,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["entities",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"entities/Article.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/article.entity",{"_index":203,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{}}}],["entities/user.entity",{"_index":700,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":98,"title":{"entities/Article.html":{},"entities/User.html":{}},"body":{"entities/Article.html":{},"controllers/AuthController.html":{},"entities/User.html":{},"coverage.html":{}}}],["entry",{"_index":908,"title":{},"body":{"index.html":{}}}],["enum",{"_index":265,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["enumerations",{"_index":793,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":383,"title":{},"body":{"modules/AuthModule.html":{}}}],["environment",{"_index":856,"title":{},"body":{"index.html":{}}}],["err",{"_index":625,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["err.getresponse",{"_index":633,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["err.getstatus",{"_index":627,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["err.message",{"_index":631,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["error",{"_index":12,"title":{},"body":{"classes/ApiResponseDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["errordetail",{"_index":630,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["errors",{"_index":641,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["errresponse",{"_index":632,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["eslint",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["everything",{"_index":499,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["example",{"_index":279,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["exceptionfilter",{"_index":650,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["exceptions",{"_index":647,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["executioncontext",{"_index":588,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["existing",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["existinguser",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["expecting",{"_index":481,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["expiration",{"_index":388,"title":{},"body":{"modules/AuthModule.html":{}}}],["expiresin",{"_index":386,"title":{},"body":{"modules/AuthModule.html":{}}}],["explicitly",{"_index":740,"title":{},"body":{"injectables/UsersService.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":199,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/UpdateArticleDto.html":{}}}],["extract",{"_index":473,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["extractjwt",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":464,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9",{"_index":576,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["failed",{"_index":640,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["false",{"_index":29,"title":{},"body":{"classes/ApiResponseDto.html":{},"entities/Article.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["false})@isoptional()@isboolean",{"_index":536,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["feature",{"_index":917,"title":{},"body":{"index.html":{}}}],["features",{"_index":820,"title":{},"body":{"index.html":{}}}],["field",{"_index":306,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filter",{"_index":280,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["findall",{"_index":131,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@req",{"_index":220,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UsersController.html":{}}}],["findall(req",{"_index":155,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UsersController.html":{}}}],["findall(user",{"_index":252,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["findone",{"_index":132,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["findone(@param('id",{"_index":223,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["findone(id",{"_index":161,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["findonebyemail",{"_index":718,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":719,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["fine",{"_index":828,"title":{},"body":{"index.html":{}}}],["first",{"_index":532,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["forbidden",{"_index":151,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["forbiddenexception",{"_index":258,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["forbiddenexception('article",{"_index":299,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["forbiddenexception('you",{"_index":274,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["format",{"_index":615,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["formats",{"_index":653,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["found",{"_index":166,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["framework",{"_index":927,"title":{},"body":{"index.html":{}}}],["full",{"_index":826,"title":{},"body":{"index.html":{}}}],["function",{"_index":511,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{}}}],["functions",{"_index":797,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":869,"title":{},"body":{"index.html":{}}}],["generic",{"_index":476,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["get(':id",{"_index":222,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["get(':id')@apioperation({summary",{"_index":162,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["get('profile",{"_index":709,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('profile')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":697,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":156,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":693,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile",{"_index":692,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(@req",{"_index":710,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(req",{"_index":696,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":800,"title":{"index.html":{}},"body":{"index.html":{}}}],["git",{"_index":850,"title":{},"body":{"index.html":{}}}],["global",{"_index":525,"title":{},"body":{"modules/CaslModule.html":{}}}],["grained",{"_index":829,"title":{},"body":{"index.html":{}}}],["granular",{"_index":289,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["handled",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["handles",{"_index":646,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["hashedpassword",{"_index":734,"title":{},"body":{"injectables/UsersService.html":{}}}],["here",{"_index":508,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/UsersService.html":{}}}],["higher",{"_index":842,"title":{},"body":{"index.html":{}}}],["host",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:3000",{"_index":895,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/api",{"_index":896,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcontext",{"_index":601,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["httpcontext.getrequest",{"_index":605,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["httpcontext.getresponse",{"_index":604,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["httpexception",{"_index":594,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["httpexception(apiresponseerror",{"_index":666,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["https://github.com/your",{"_index":851,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":947,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["httpstatus.internal_server_error",{"_index":628,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["httpstatus.no_content",{"_index":611,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["httpstatus.ok",{"_index":609,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["id",{"_index":103,"title":{},"body":{"entities/Article.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["id'})@apiresponse({status",{"_index":163,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["ideally",{"_index":648,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["identifier",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":600,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importing",{"_index":528,"title":{},"body":{"modules/CaslModule.html":{}}}],["imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["includes",{"_index":811,"title":{},"body":{"index.html":{}}}],["including",{"_index":814,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/ApiResponseDto.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":207,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["infersubjects",{"_index":465,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["initial",{"_index":870,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":241,"title":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":242,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":259,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(article",{"_index":267,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["injectrepository(user",{"_index":732,"title":{},"body":{"injectables/UsersService.html":{}}}],["install",{"_index":847,"title":{},"body":{"index.html":{}}}],["install2",{"_index":855,"title":{},"body":{"index.html":{}}}],["installation",{"_index":928,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":929,"title":{},"body":{"index.html":{}}}],["instance",{"_index":487,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["instanceof",{"_index":626,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["integration",{"_index":830,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":834,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":586,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["intercept(context",{"_index":587,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["interceptor",{"_index":651,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["interceptors",{"_index":913,"title":{},"body":{"index.html":{}}}],["internal",{"_index":629,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["invalid",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["involve",{"_index":284,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{}}}],["isboolean",{"_index":544,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["isemail",{"_index":575,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{}}}],["isn't",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":540,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{}}}],["isoptional",{"_index":543,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["ispublished",{"_index":104,"title":{},"body":{"entities/Article.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{}}}],["isstring",{"_index":541,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["it's",{"_index":483,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["item",{"_index":519,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["item.constructor",{"_index":520,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["json",{"_index":837,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":208,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["jwtservice",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":368,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":944,"title":{},"body":{"index.html":{}}}],["key",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["keyword",{"_index":475,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["know",{"_index":514,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["last",{"_index":888,"title":{},"body":{"index.html":{}}}],["legend",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":950,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":940,"title":{},"body":{"index.html":{}}}],["line",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["lint",{"_index":901,"title":{},"body":{"index.html":{}}}],["list",{"_index":159,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UsersController.html":{}}}],["literal",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["localhost",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["logged",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logging",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":287,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["login",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["login(@body",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginauthdto",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginauthdto",{"_index":317,"title":{"classes/LoginAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginAuthDto.html":{},"coverage.html":{}}}],["loginauthdto.password",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginresponsedto",{"_index":349,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logout",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["logout(@req",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(token",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["make",{"_index":526,"title":{},"body":{"modules/CaslModule.html":{}}}],["manage",{"_index":470,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["management",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["manytoone",{"_index":120,"title":{},"body":{"entities/Article.html":{}}}],["manytoone(undefined",{"_index":106,"title":{},"body":{"entities/Article.html":{}}}],["map",{"_index":596,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["map(data",{"_index":607,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["matching",{"_index":43,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":13,"title":{},"body":{"classes/ApiResponseDto.html":{},"injectables/AuthService.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["message.join",{"_index":638,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["metadata",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":129,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["migration",{"_index":871,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":874,"title":{},"body":{"index.html":{}}}],["migration:revert4",{"_index":889,"title":{},"body":{"index.html":{}}}],["migration:run",{"_index":877,"title":{},"body":{"index.html":{}}}],["migration:show",{"_index":907,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":815,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["minlength",{"_index":542,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/RegisterAuthDto.html":{}}}],["minlength(3",{"_index":546,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["minlength(6",{"_index":583,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["miscellaneous",{"_index":792,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":939,"title":{},"body":{"index.html":{}}}],["mode",{"_index":892,"title":{},"body":{"index.html":{}}}],["modifying",{"_index":644,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["module",{"_index":44,"title":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":46,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/articles/articles.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/articles/entities/article.entity",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/casl/casl.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/entities/user.entity",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":285,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["mysql",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mysql2",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":945,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"classes/ApiResponseDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["name=initialentities",{"_index":875,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":202,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["needed",{"_index":500,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["nest",{"_index":926,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":949,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":593,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["nestjs",{"_index":645,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["nestjs/common",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":865,"title":{},"body":{"index.html":{}}}],["nestjs/core",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":198,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":35,"title":{},"body":{"classes/ApiResponseDto.html":{},"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"classes/UpdateArticleDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs_casl_demo",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":141,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":737,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["next.handle().pipe",{"_index":606,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["node.js",{"_index":840,"title":{},"body":{"index.html":{}}}],["non",{"_index":497,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["notfoundexception",{"_index":730,"title":{},"body":{"injectables/UsersService.html":{}}}],["now",{"_index":292,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["npm",{"_index":844,"title":{},"body":{"index.html":{}}}],["npx",{"_index":934,"title":{},"body":{"index.html":{}}}],["null",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["number",{"_index":17,"title":{},"body":{"classes/ApiResponseDto.html":{},"entities/Article.html":{},"injectables/ArticlesService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":515,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["object.assign(article",{"_index":301,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["object.keys(data).length",{"_index":620,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["observable",{"_index":592,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["omit",{"_index":488,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["onetomany",{"_index":682,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":671,"title":{},"body":{"entities/User.html":{}}}],["open",{"_index":941,"title":{},"body":{"index.html":{}}}],["operations",{"_index":824,"title":{},"body":{"index.html":{}}}],["optional",{"_index":10,"title":{},"body":{"classes/ApiResponseDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":867,"title":{},"body":{"index.html":{}}}],["original",{"_index":924,"title":{},"body":{"index.html":{}}}],["out",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":819,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":936,"title":{},"body":{"index.html":{}}}],["package",{"_index":769,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":186,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"classes/ApiResponseDto.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.db_port",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":661,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["partialtype",{"_index":669,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["partialtype(createarticledto",{"_index":668,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["pass",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["passport",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":185,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["patch(':id",{"_index":225,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":180,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["patch(':id/publish",{"_index":231,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["patch(':id/publish')@apioperation({summary",{"_index":169,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["path",{"_index":201,"title":{},"body":{"controllers/ArticlesController.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":663,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["payload",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["permission",{"_index":283,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["permissions",{"_index":291,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["placeholder",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["populate",{"_index":878,"title":{},"body":{"index.html":{}}}],["populated",{"_index":705,"title":{},"body":{"controllers/UsersController.html":{}}}],["port",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":183,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"index.html":{}}}],["post('login",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apioperation({summary",{"_index":140,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["prakashbahadurchand",{"_index":581,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["prakashbahadurchand@gmail.com",{"_index":569,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{}}}],["preferably",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{}}}],["prefix",{"_index":127,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":839,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":686,"title":{},"body":{"entities/User.html":{}}}],["primarily",{"_index":652,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["primarygeneratedcolumn",{"_index":114,"title":{},"body":{"entities/Article.html":{},"entities/User.html":{}}}],["private",{"_index":268,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["process.env.db_database",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":864,"title":{},"body":{"index.html":{}}}],["profile",{"_index":506,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["profiles",{"_index":825,"title":{},"body":{"index.html":{}}}],["project",{"_index":803,"title":{},"body":{"index.html":{}}}],["promise",{"_index":251,"title":{},"body":{"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/ApiResponseDto.html":{},"entities/Article.html":{},"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"entities/User.html":{},"properties.html":{}}}],["protected",{"_index":707,"title":{},"body":{"controllers/UsersController.html":{}}}],["provide",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["publish",{"_index":133,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["publish(@param('id",{"_index":232,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["publish(id",{"_index":168,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["publish/unpublish",{"_index":308,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["published",{"_index":170,"title":{},"body":{"controllers/ArticlesController.html":{},"classes/CreateArticleDto.html":{}}}],["publishing",{"_index":827,"title":{},"body":{"index.html":{}}}],["pureability",{"_index":466,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["rbac",{"_index":813,"title":{},"body":{"index.html":{}}}],["re",{"_index":659,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["read",{"_index":282,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["reader",{"_index":683,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["reader1",{"_index":885,"title":{},"body":{"index.html":{}}}],["reader@123",{"_index":886,"title":{},"body":{"index.html":{}}}],["readme",{"_index":925,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":213,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["real",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["recommendation",{"_index":862,"title":{},"body":{"index.html":{}}}],["recommended",{"_index":843,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["register",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerauthdto",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerauthdto",{"_index":331,"title":{"classes/RegisterAuthDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterAuthDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["registered",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["registration",{"_index":822,"title":{},"body":{"index.html":{}}}],["relations",{"_index":298,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["remove",{"_index":134,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["remove(@param('id",{"_index":229,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["remove(id",{"_index":172,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["replace",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["repository",{"_index":246,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":138,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["req.headers.authorization?.split",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":219,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":139,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["request.method",{"_index":610,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["required",{"_index":37,"title":{},"body":{"classes/ApiResponseDto.html":{},"controllers/ArticlesController.html":{},"classes/CreateArticleDto.html":{}}}],["requires",{"_index":643,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":603,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["response.dto",{"_index":205,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["response.dto.ts",{"_index":7,"title":{},"body":{"classes/ApiResponseDto.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":30,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["response.dto.ts:14",{"_index":21,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["response.dto.ts:5",{"_index":33,"title":{},"body":{"classes/ApiResponseDto.html":{},"classes/LoginResponseDto.html":{}}}],["response.dto.ts:8",{"_index":32,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["response.status(httpstatus.ok",{"_index":612,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["response.statuscode",{"_index":608,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["responses",{"_index":655,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["responsetransforminterceptor",{"_index":77,"title":{"injectables/ResponseTransformInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["restful",{"_index":809,"title":{},"body":{"index.html":{}}}],["result",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":42,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":217,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":293,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["returns",{"_index":154,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["revert",{"_index":887,"title":{},"body":{"index.html":{}}}],["robust",{"_index":806,"title":{},"body":{"index.html":{}}}],["role",{"_index":468,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["role.reader",{"_index":739,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles",{"_index":509,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["root",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route",{"_index":708,"title":{},"body":{"controllers/UsersController.html":{}}}],["routes",{"_index":209,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["run",{"_index":868,"title":{},"body":{"index.html":{}}}],["running",{"_index":858,"title":{},"body":{"index.html":{}}}],["runseed",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxjs",{"_index":595,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":598,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["same",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["scripts",{"_index":897,"title":{},"body":{"index.html":{}}}],["second",{"_index":516,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["secret",{"_index":377,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["secretorkey",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":821,"title":{},"body":{"index.html":{}}}],["see",{"_index":923,"title":{},"body":{"index.html":{}}}],["seed",{"_index":879,"title":{},"body":{"index.html":{}}}],["seed.ts",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["seed:rundefault",{"_index":880,"title":{},"body":{"index.html":{}}}],["seeded",{"_index":881,"title":{},"body":{"index.html":{}}}],["seeding",{"_index":816,"title":{},"body":{"index.html":{}}}],["seeds",{"_index":915,"title":{},"body":{"index.html":{}}}],["select",{"_index":685,"title":{},"body":{"entities/User.html":{}}}],["selected",{"_index":688,"title":{},"body":{"entities/User.html":{}}}],["sensitive",{"_index":863,"title":{},"body":{"index.html":{}}}],["server",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["service",{"_index":617,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["session",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":741,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["setup",{"_index":807,"title":{},"body":{"index.html":{}}}],["shape",{"_index":658,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["shared",{"_index":911,"title":{},"body":{"index.html":{}}}],["side",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":385,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":619,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{}}}],["simplicity",{"_index":489,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"classes/UpdateArticleDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["source.ts",{"_index":757,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":304,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["specify",{"_index":485,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["src/.../casl",{"_index":794,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../data",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../run",{"_index":799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.entity.ts",{"_index":795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["src/core/common",{"_index":910,"title":{},"body":{"index.html":{}}}],["src/core/common/dto/api",{"_index":6,"title":{},"body":{"classes/ApiResponseDto.html":{},"coverage.html":{}}}],["src/core/common/interceptors/response",{"_index":584,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["src/core/database",{"_index":914,"title":{},"body":{"index.html":{}}}],["src/core/database/seeds/run",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/data",{"_index":756,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["src/modules",{"_index":916,"title":{},"body":{"index.html":{}}}],["src/modules/articles/articles.controller.ts",{"_index":126,"title":{},"body":{"controllers/ArticlesController.html":{},"coverage.html":{}}}],["src/modules/articles/articles.controller.ts:24",{"_index":153,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:32",{"_index":160,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:42",{"_index":167,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:52",{"_index":182,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:62",{"_index":177,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.controller.ts:72",{"_index":171,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/modules/articles/articles.module.ts",{"_index":237,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["src/modules/articles/articles.service.ts",{"_index":243,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/modules/articles/articles.service.ts:12",{"_index":248,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:19",{"_index":250,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:32",{"_index":253,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:43",{"_index":254,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:55",{"_index":257,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:68",{"_index":256,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/articles.service.ts:80",{"_index":255,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/modules/articles/dto/create",{"_index":529,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/modules/articles/dto/update",{"_index":667,"title":{},"body":{"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["src/modules/articles/entities/article.entity.ts",{"_index":99,"title":{},"body":{"entities/Article.html":{},"coverage.html":{}}}],["src/modules/articles/entities/article.entity.ts:10",{"_index":119,"title":{},"body":{"entities/Article.html":{}}}],["src/modules/articles/entities/article.entity.ts:13",{"_index":113,"title":{},"body":{"entities/Article.html":{}}}],["src/modules/articles/entities/article.entity.ts:16",{"_index":118,"title":{},"body":{"entities/Article.html":{}}}],["src/modules/articles/entities/article.entity.ts:19",{"_index":109,"title":{},"body":{"entities/Article.html":{}}}],["src/modules/articles/entities/article.entity.ts:22",{"_index":111,"title":{},"body":{"entities/Article.html":{}}}],["src/modules/articles/entities/article.entity.ts:7",{"_index":115,"title":{},"body":{"entities/Article.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:22",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:31",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:42",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:10",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:16",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:26",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:37",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:46",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/login",{"_index":567,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register",{"_index":578,"title":{},"body":{"classes/RegisterAuthDto.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:17",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:8",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/casl/casl",{"_index":457,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/casl/casl.module.ts",{"_index":524,"title":{},"body":{"modules/CaslModule.html":{}}}],["src/modules/users/entities/user.entity.ts",{"_index":670,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/users/entities/user.entity.ts:13",{"_index":676,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/entities/user.entity.ts:16",{"_index":681,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/entities/user.entity.ts:19",{"_index":675,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/entities/user.entity.ts:22",{"_index":678,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/entities/user.entity.ts:27",{"_index":680,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/entities/user.entity.ts:30",{"_index":673,"title":{},"body":{"entities/User.html":{}}}],["src/modules/users/users.controller.ts",{"_index":690,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:20",{"_index":695,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:32",{"_index":698,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":714,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":717,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:15",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:19",{"_index":729,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:23",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:36",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:9",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssupport",{"_index":938,"title":{},"body":{"index.html":{}}}],["standard",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["standardized",{"_index":818,"title":{},"body":{"index.html":{}}}],["start",{"_index":930,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":898,"title":{},"body":{"index.html":{}}}],["start:devaccess",{"_index":894,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":931,"title":{},"body":{"index.html":{}}}],["started",{"_index":801,"title":{"index.html":{}},"body":{"index.html":{}}}],["starter",{"_index":804,"title":{},"body":{"index.html":{}}}],["statements",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":215,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["statuscode",{"_index":14,"title":{},"body":{"classes/ApiResponseDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["stay",{"_index":942,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":18,"title":{},"body":{"classes/ApiResponseDto.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"injectables/AuthService.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["strong",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{}}}],["structure",{"_index":838,"title":{},"body":{"index.html":{}}}],["sub",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":482,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["subjects",{"_index":480,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["success",{"_index":623,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"index.html":{}}}],["successful",{"_index":654,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["successfully",{"_index":145,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["summary",{"_index":214,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":559,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":833,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":952,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":788,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["synchronize",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":19,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["table",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":873,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["tells",{"_index":512,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["test",{"_index":902,"title":{},"body":{"index.html":{}}}],["test:covfor",{"_index":932,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":905,"title":{},"body":{"index.html":{}}}],["tests",{"_index":904,"title":{},"body":{"index.html":{}}}],["this.articlesrepository.create",{"_index":276,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.delete(id",{"_index":303,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.find",{"_index":295,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.findone",{"_index":297,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepository.save(article",{"_index":278,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesservice.create(createarticledto",{"_index":218,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.findall(req.user",{"_index":221,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.findone(+id",{"_index":224,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.publish(+id",{"_index":233,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.remove(+id",{"_index":230,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.update(+id",{"_index":227,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.authservice.login(loginauthdto",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(token",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registerauthdto",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.caslabilityfactory.createforuser(user",{"_index":271,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.data",{"_index":40,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["this.error",{"_index":41,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["this.jwtservice.sign(payload",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.message",{"_index":39,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["this.statuscode",{"_index":38,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["this.usersrepository.create",{"_index":738,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.find",{"_index":743,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone",{"_index":733,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":742,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(registerauthdto",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findall",{"_index":706,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(registerauthdto.email",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(payload.sub",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.validateuser(loginauthdto.email",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":273,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ResponseTransformInterceptor.html":{}}}],["thrown",{"_index":660,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["time",{"_index":389,"title":{},"body":{"modules/AuthModule.html":{}}}],["title",{"_index":105,"title":{},"body":{"entities/Article.html":{},"classes/CreateArticleDto.html":{}}}],["token",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["tokens",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["toor",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":943,"title":{},"body":{"index.html":{}}}],["transform.interceptor",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["transform.interceptor.ts",{"_index":585,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"coverage.html":{}}}],["transform.interceptor.ts:8",{"_index":590,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["true",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"entities/Article.html":{},"injectables/ArticlesService.html":{},"entities/User.html":{}}}],["truly",{"_index":656,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["tsconfig.json",{"_index":937,"title":{},"body":{"index.html":{}}}],["tuple",{"_index":479,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["twitter",{"_index":948,"title":{},"body":{"index.html":{}}}],["two",{"_index":478,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["type",{"_index":25,"title":{},"body":{"classes/ApiResponseDto.html":{},"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateArticleDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":959,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":618,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{}}}],["typeorm",{"_index":121,"title":{},"body":{"entities/Article.html":{},"injectables/ArticlesService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([article",{"_index":240,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":716,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["types",{"_index":474,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["typescript",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["typically",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["ui",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":149,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":152,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["undefined})@apiresponse({status",{"_index":147,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["uniform",{"_index":836,"title":{},"body":{"index.html":{}}}],["unique",{"_index":684,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":903,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":958,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":135,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/CaslAbilityFactory.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["update(@param('id",{"_index":226,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["update(id",{"_index":178,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["updatearticledto",{"_index":179,"title":{"classes/UpdateArticleDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["updated",{"_index":181,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["url",{"_index":848,"title":{},"body":{"index.html":{}}}],["use",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"index.html":{}}}],["useclass",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":187,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard('jwt",{"_index":210,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":69,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"entities/Article.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user'})@apiresponse({status",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["user'})@isnotempty",{"_index":573,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{}}}],["user'})@isnotempty()@isemail",{"_index":570,"title":{},"body":{"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{}}}],["user'})@isnotempty()@minlength(6",{"_index":579,"title":{},"body":{"classes/RegisterAuthDto.html":{}}}],["user.articles",{"_index":107,"title":{},"body":{"entities/Article.html":{}}}],["user.email",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":277,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{}}}],["user.password",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles.includes(role.admin",{"_index":492,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.roles.includes(role.author",{"_index":501,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.username",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterAuthDto.html":{},"entities/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["username/nestjs",{"_index":852,"title":{},"body":{"index.html":{}}}],["users",{"_index":691,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["users.controller",{"_index":715,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.map(user",{"_index":744,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":699,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/entities/user.entity",{"_index":122,"title":{},"body":{"entities/Article.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{}}}],["users/users.module",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.service",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userscontroller",{"_index":689,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":58,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":393,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":305,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["v18",{"_index":841,"title":{},"body":{"index.html":{}}}],["validate",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":639,"title":{},"body":{"injectables/ResponseTransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["validator",{"_index":545,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/LoginAuthDto.html":{},"classes/RegisterAuthDto.html":{},"injectables/ResponseTransformInterceptor.html":{},"dependencies.html":{}}}],["value",{"_index":796,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":384,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AuthModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vars",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["version",{"_index":956,"title":{},"body":{"properties.html":{}}}],["via",{"_index":831,"title":{},"body":{"index.html":{}}}],["want",{"_index":290,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["watch",{"_index":893,"title":{},"body":{"index.html":{}}}],["website",{"_index":946,"title":{},"body":{"index.html":{}}}],["whether",{"_index":535,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["wildcard",{"_index":471,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["without",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"modules/CaslModule.html":{}}}],["yarn",{"_index":845,"title":{},"body":{"index.html":{}}}],["yes",{"_index":26,"title":{},"body":{"classes/ApiResponseDto.html":{}}}],["yoursecretkey",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["zoom",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiResponseDto.html":{"url":"classes/ApiResponseDto.html","title":"class - ApiResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/dto/api-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                data\n                            \n                            \n                                    \n                                    Optional\n                                error\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusCode: number, message: string, data?: T, error?: string)\n                    \n                \n                        \n                            \n                                Defined in src/core/common/dto/api-response.dto.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/common/dto/api-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/common/dto/api-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/common/dto/api-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/common/dto/api-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ApiResponseDto {\n    @ApiProperty()\n    statusCode: number;\n\n    @ApiProperty()\n    message: string;\n\n    @ApiProperty({ required: false })\n    data?: T;\n\n    @ApiProperty({ required: false })\n    error?: string;\n\n    constructor(statusCode: number, message: string, data?: T, error?: string) {\n        this.statusCode = statusCode;\n        this.message = message;\n        if (data) this.data = data;\n        if (error) this.error = error;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticlesModule\n\nArticlesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ArticlesModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { User } from './modules/users/entities/user.entity';\nimport { Article } from './modules/articles/entities/article.entity';\nimport { CaslModule } from './modules/casl/casl.module';\nimport { ArticlesModule } from './modules/articles/articles.module';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { ResponseTransformInterceptor } from './core/common/interceptors/response-transform.interceptor';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'toor',\n      database: 'nestjs_casl_demo',\n      entities: [User, Article],\n      synchronize: true,\n    }),\n    AuthModule,\n    UsersModule,\n    CaslModule,\n    ArticlesModule,\n  ],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: ResponseTransformInterceptor,\n    },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Article.html":{"url":"entities/Article.html","title":"entity - Article","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/entities/article.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                author\n                            \n                            \n                                    \n                                authorId\n                            \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isPublished\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.articles, {eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/entities/article.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        authorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/entities/article.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/entities/article.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/entities/article.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/entities/article.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/entities/article.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, ManyToOne } from 'typeorm';\nimport { User } from '../../users/entities/user.entity';\n\n@Entity()\nexport class Article {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    title: string;\n\n    @Column('text')\n    content: string;\n\n    @Column({ default: false })\n    isPublished: boolean;\n\n    @ManyToOne(() => User, user => user.articles, { eager: true })\n    author: User;\n\n    @Column()\n    authorId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesController.html":{"url":"controllers/ArticlesController.html","title":"controller - ArticlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                publish\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateArticleDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new article'})@ApiResponse({status: 201, description: 'Article successfully created.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})@ApiResponse({status: 403, description: 'Forbidden.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                            CreateArticleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get all articles'})@ApiResponse({status: 200, description: 'List of articles.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get an article by ID'})@ApiResponse({status: 200, description: 'Article details.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})@ApiResponse({status: 403, description: 'Forbidden.', type: undefined})@ApiResponse({status: 404, description: 'Not Found.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        publish\n                        \n                    \n                \n            \n            \n                \n                        \n                    publish(id: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/publish')@ApiOperation({summary: 'Publish an article by ID'})@ApiResponse({status: 200, description: 'Article successfully published.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})@ApiResponse({status: 403, description: 'Forbidden.', type: undefined})@ApiResponse({status: 404, description: 'Not Found.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete an article by ID'})@ApiResponse({status: 204, description: 'Article successfully deleted.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})@ApiResponse({status: 403, description: 'Forbidden.', type: undefined})@ApiResponse({status: 404, description: 'Not Found.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateArticleDto: UpdateArticleDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update an article by ID'})@ApiResponse({status: 200, description: 'Article successfully updated.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})@ApiResponse({status: 403, description: 'Forbidden.', type: undefined})@ApiResponse({status: 404, description: 'Not Found.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/articles/articles.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateArticleDto\n                                            \n                                                            UpdateArticleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Req } from '@nestjs/common';\nimport { ArticlesService } from './articles.service';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { UpdateArticleDto } from './dto/update-article.dto';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { User } from '../users/entities/user.entity'; // Adjust path as necessary\nimport { Article } from './entities/article.entity';\nimport { ApiResponseDto } from '../../core/common/dto/api-response.dto';\n\n@ApiTags('Articles')\n@ApiBearerAuth() // Indicates that JWT is required for all routes in this controller\n@UseGuards(AuthGuard('jwt'))\n@Controller('articles')\nexport class ArticlesController {\n    constructor(private readonly articlesService: ArticlesService) { }\n\n    @Post()\n    @ApiOperation({ summary: 'Create a new article' })\n    @ApiResponse({ status: 201, description: 'Article successfully created.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    @ApiResponse({ status: 403, description: 'Forbidden.', type: ApiResponseDto })\n    create(@Body() createArticleDto: CreateArticleDto, @Req() req: Request) {\n        return this.articlesService.create(createArticleDto, req.user as User);\n    }\n\n    @Get()\n    @ApiOperation({ summary: 'Get all articles' })\n    @ApiResponse({ status: 200, description: 'List of articles.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    findAll(@Req() req: Request) {\n        return this.articlesService.findAll(req.user as User);\n    }\n\n    @Get(':id')\n    @ApiOperation({ summary: 'Get an article by ID' })\n    @ApiResponse({ status: 200, description: 'Article details.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    @ApiResponse({ status: 403, description: 'Forbidden.', type: ApiResponseDto })\n    @ApiResponse({ status: 404, description: 'Not Found.', type: ApiResponseDto })\n    findOne(@Param('id') id: string, @Req() req: Request) {\n        return this.articlesService.findOne(+id, req.user as User);\n    }\n\n    @Patch(':id')\n    @ApiOperation({ summary: 'Update an article by ID' })\n    @ApiResponse({ status: 200, description: 'Article successfully updated.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    @ApiResponse({ status: 403, description: 'Forbidden.', type: ApiResponseDto })\n    @ApiResponse({ status: 404, description: 'Not Found.', type: ApiResponseDto })\n    update(@Param('id') id: string, @Body() updateArticleDto: UpdateArticleDto, @Req() req: Request) {\n        return this.articlesService.update(+id, updateArticleDto, req.user as User);\n    }\n\n    @Delete(':id')\n    @ApiOperation({ summary: 'Delete an article by ID' })\n    @ApiResponse({ status: 204, description: 'Article successfully deleted.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    @ApiResponse({ status: 403, description: 'Forbidden.', type: ApiResponseDto })\n    @ApiResponse({ status: 404, description: 'Not Found.', type: ApiResponseDto })\n    remove(@Param('id') id: string, @Req() req: Request) {\n        return this.articlesService.remove(+id, req.user as User);\n    }\n\n    @Patch(':id/publish')\n    @ApiOperation({ summary: 'Publish an article by ID' })\n    @ApiResponse({ status: 200, description: 'Article successfully published.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    @ApiResponse({ status: 403, description: 'Forbidden.', type: ApiResponseDto })\n    @ApiResponse({ status: 404, description: 'Not Found.', type: ApiResponseDto })\n    publish(@Param('id') id: string, @Req() req: Request) {\n        return this.articlesService.publish(+id, req.user as User);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticlesModule.html":{"url":"modules/ArticlesModule.html","title":"module - ArticlesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticlesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticlesModule\n\n\n\ncluster_ArticlesModule_imports\n\n\n\ncluster_ArticlesModule_providers\n\n\n\n\nCaslModule\n\nCaslModule\n\n\n\nArticlesModule\n\nArticlesModule\n\nArticlesModule -->\n\nCaslModule->ArticlesModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nArticlesModule -->\n\nArticlesService->ArticlesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/articles/articles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticlesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticlesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CaslModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ArticlesController } from './articles.controller';\nimport { ArticlesService } from './articles.service';\nimport { Article } from './entities/article.entity';\nimport { CaslModule } from '../casl/casl.module';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([Article]), CaslModule],\n    controllers: [ArticlesController],\n    providers: [ArticlesService],\n})\nexport class ArticlesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/articles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                publish\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(articlesRepository: Repository, caslAbilityFactory: CaslAbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/modules/articles/articles.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        articlesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        CaslAbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createArticleDto: CreateArticleDto, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/articles/articles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createArticleDto\n                                            \n                                                            CreateArticleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/articles/articles.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/articles/articles.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        publish\n                        \n                    \n                \n            \n            \n                \n                        \n                    publish(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/articles/articles.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/articles/articles.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateArticleDto: UpdateArticleDto, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/articles/articles.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateArticleDto\n                                            \n                                                            UpdateArticleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ForbiddenException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Article } from './entities/article.entity';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { UpdateArticleDto } from './dto/update-article.dto';\nimport { User } from '../users/entities/user.entity';\nimport { CaslAbilityFactory, AppAbility } from '../casl/casl-ability.factory';\nimport { Action } from '../casl/casl-ability.factory'; // Assuming Action enum is in casl-ability.factory\n\n@Injectable()\nexport class ArticlesService {\n    constructor(\n        @InjectRepository(Article)\n        private articlesRepository: Repository,\n        private caslAbilityFactory: CaslAbilityFactory,\n    ) { }\n\n    async create(createArticleDto: CreateArticleDto, user: User): Promise {\n        const ability = this.caslAbilityFactory.createForUser(user);\n        if (ability.cannot(Action.Create, Article)) {\n            throw new ForbiddenException('You are not authorized to create articles.');\n        }\n        const article = this.articlesRepository.create({\n            ...createArticleDto,\n            author: user,\n            authorId: user.id,\n        });\n        return this.articlesRepository.save(article);\n    }\n\n    async findAll(user: User): Promise {\n        const ability = this.caslAbilityFactory.createForUser(user);\n        // Example: Filter articles based on read permission if necessary\n        // This might involve more complex logic depending on how granular you want permissions\n        // For now, returning all if user can read any article\n        if (ability.cannot(Action.Read, Article)) {\n            throw new ForbiddenException('You are not authorized to read articles.');\n        }\n        return this.articlesRepository.find();\n    }\n\n    async findOne(id: number, user: User): Promise {\n        const article = await this.articlesRepository.findOne({ where: { id }, relations: ['author'] });\n        if (!article) {\n            throw new ForbiddenException('Article not found.');\n        }\n        const ability = this.caslAbilityFactory.createForUser(user);\n        if (ability.cannot(Action.Read, article)) {\n            throw new ForbiddenException('You are not authorized to read this article.');\n        }\n        return article;\n    }\n\n    async update(id: number, updateArticleDto: UpdateArticleDto, user: User): Promise {\n        const article = await this.articlesRepository.findOne({ where: { id } });\n        if (!article) {\n            throw new ForbiddenException('Article not found.');\n        }\n        const ability = this.caslAbilityFactory.createForUser(user);\n        if (ability.cannot(Action.Update, article)) {\n            throw new ForbiddenException('You are not authorized to update this article.');\n        }\n        Object.assign(article, updateArticleDto);\n        return this.articlesRepository.save(article);\n    }\n\n    async remove(id: number, user: User): Promise {\n        const article = await this.articlesRepository.findOne({ where: { id } });\n        if (!article) {\n            throw new ForbiddenException('Article not found.');\n        }\n        const ability = this.caslAbilityFactory.createForUser(user);\n        if (ability.cannot(Action.Delete, article)) {\n            throw new ForbiddenException('You are not authorized to delete this article.');\n        }\n        await this.articlesRepository.delete(id);\n    }\n\n    async publish(id: number, user: User): Promise {\n        const article = await this.articlesRepository.findOne({ where: { id } });\n        if (!article) {\n            throw new ForbiddenException('Article not found.');\n        }\n        const ability = this.caslAbilityFactory.createForUser(user);\n        // Assuming a specific 'Publish' action or using 'Update' with field conditions\n        if (ability.cannot(Action.Update, article, 'isPublished')) {\n            throw new ForbiddenException('You are not authorized to publish/unpublish this article.');\n        }\n        article.isPublished = true;\n        return this.articlesRepository.save(article);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Log in an existing user'})@ApiResponse({status: 200, description: 'User successfully logged in.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized. Invalid credentials.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Log out the current user'})@ApiResponse({status: 200, description: 'User successfully logged out.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerAuthDto: RegisterAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'Register a new user'})@ApiResponse({status: 201, description: 'User successfully registered.', type: undefined})@ApiResponse({status: 400, description: 'Bad Request.', type: undefined})@ApiResponse({status: 409, description: 'Conflict. Email already exists.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerAuthDto\n                                            \n                                                            RegisterAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, HttpCode, HttpStatus, UseGuards, Req } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterAuthDto } from './dto/register-auth.dto';\nimport { LoginAuthDto } from './dto/login-auth.dto';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { User } from '../users/entities/user.entity'; // Assuming User entity is defined\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { ApiResponseDto } from '../../core/common/dto/api-response.dto';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) { }\n\n    @Post('register')\n    @ApiOperation({ summary: 'Register a new user' })\n    @ApiResponse({ status: 201, description: 'User successfully registered.', type: ApiResponseDto })\n    @ApiResponse({ status: 400, description: 'Bad Request.', type: ApiResponseDto })\n    @ApiResponse({ status: 409, description: 'Conflict. Email already exists.', type: ApiResponseDto })\n    async register(@Body() registerAuthDto: RegisterAuthDto): Promise> {\n        return this.authService.register(registerAuthDto);\n    }\n\n    @Post('login')\n    @HttpCode(HttpStatus.OK)\n    @ApiOperation({ summary: 'Log in an existing user' })\n    @ApiResponse({ status: 200, description: 'User successfully logged in.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized. Invalid credentials.', type: ApiResponseDto })\n    async login(@Body() loginAuthDto: LoginAuthDto): Promise {\n        return this.authService.login(loginAuthDto);\n    }\n\n    @Post('logout')\n    @UseGuards(AuthGuard('jwt'))\n    @ApiBearerAuth()\n    @HttpCode(HttpStatus.OK)\n    @ApiOperation({ summary: 'Log out the current user' })\n    @ApiResponse({ status: 200, description: 'User successfully logged out.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    async logout(@Req() req: Request): Promise {\n        const token = req.headers.authorization?.split(' ')?.[1];\n        return this.authService.logout(token || '');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n    imports: [\n        UsersModule,\n        PassportModule,\n        JwtModule.register({\n            secret: 'yourSecretKey', // Replace with a strong secret key, preferably from env variables\n            signOptions: { expiresIn: '1h' }, // Token expiration time\n        }),\n    ],\n    providers: [AuthService, JwtStrategy],\n    controllers: [AuthController],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginAuthDto: LoginAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginAuthDto\n                                            \n                                                            LoginAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerAuthDto: RegisterAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerAuthDto\n                                            \n                                                            RegisterAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, ConflictException } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { RegisterAuthDto } from './dto/register-auth.dto';\nimport { LoginAuthDto } from './dto/login-auth.dto';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService,\n    ) { }\n\n    async validateUser(email: string, pass: string): Promise | null> {\n        const user = await this.usersService.findOneByEmail(email);\n        if (user && user.password && await bcrypt.compare(pass, user.password)) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { password, ...result } = user;\n            return result;\n        }\n        return null;\n    }\n\n    async login(loginAuthDto: LoginAuthDto): Promise {\n        const user = await this.validateUser(loginAuthDto.email, loginAuthDto.password);\n        if (!user) {\n            throw new UnauthorizedException('Invalid credentials');\n        }\n        const payload = { email: user.email, sub: user.id, username: user.username };\n        return {\n            accessToken: this.jwtService.sign(payload),\n        };\n    }\n\n    async register(registerAuthDto: RegisterAuthDto): Promise> {\n        const existingUser = await this.usersService.findOneByEmail(registerAuthDto.email);\n        if (existingUser) {\n            throw new ConflictException('Email already exists');\n        }\n        return this.usersService.create(registerAuthDto);\n    }\n\n    // Basic logout - in a real app, you might use token blacklisting\n    async logout(token: string): Promise {\n        // For JWT, logout is typically handled client-side by deleting the token.\n        // Server-side might involve adding token to a blacklist if using refresh tokens or more complex session management.\n        // This is a placeholder as direct JWT logout server-side without blacklisting isn't standard.\n        console.log(`Logout attempt with token: ${token}`);\n        return { message: 'Logged out successfully' };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslAbilityFactory.html":{"url":"injectables/CaslAbilityFactory.html","title":"injectable - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/casl/casl-ability.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForUser\n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/casl/casl-ability.factory.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AbilityBuilder, AbilityClass, ExtractSubjectType, InferSubjects, PureAbility } from '@casl/ability';\nimport { Injectable } from '@nestjs/common';\nimport { User, Role } from '../users/entities/user.entity';\nimport { Article } from '../articles/entities/article.entity';\n\nexport enum Action {\n    Manage = 'manage', // wildcard for all actions\n    Create = 'create',\n    Read = 'read',\n    Update = 'update',\n    Delete = 'delete',\n}\n\n// `InferSubjects` will extract types from Article and User classes\n// and return `'Article' | 'User' | 'all'` (if you use `'all'` keyword).\n// `PureAbility` is a generic class that accepts two type parameters:\n// 1. Tuple of actions and subjects; if an action is not expecting a subject, \n//    then it's enough to specify just an action name.\n// 2. Conditions type for this ability instance (we will omit it for simplicity in this example)\nexport type Subjects = InferSubjects | 'all';\n\nexport type AppAbility = PureAbility;\n\n@Injectable()\nexport class CaslAbilityFactory {\n    createForUser(user: User) {\n        const { can, cannot, build } = new AbilityBuilder(PureAbility as AbilityClass);\n\n        if (user.roles.includes(Role.ADMIN)) {\n            can(Action.Manage, 'all'); // Admin can do anything\n        } else {\n            can(Action.Read, 'all'); // Non-admins can read everything (adjust as needed)\n        }\n\n        // Article-specific permissions for AUTHOR role\n        if (user.roles.includes(Role.AUTHOR)) {\n            can(Action.Create, Article);\n            can(Action.Update, Article, { authorId: user.id });\n            can(Action.Delete, Article, { authorId: user.id });\n            // Author can publish/unpublish their own articles (using Update with field condition)\n            can(Action.Update, Article, 'isPublished', { authorId: user.id });\n        }\n\n        // User-specific permissions (example: user can update their own profile)\n        can(Action.Update, User, { id: user.id });\n\n        // Add more specific permissions here based on roles or other conditions\n\n        return build({\n            // `detectSubjectType` is a function that tells CASL how to get a subject type.\n            // It's crucial for CASL to know how to get the type of an object when you pass an instance\n            // as a second argument to `ability.can(action, subject)`\n            detectSubjectType: item => item.constructor as ExtractSubjectType\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CaslModule_exports\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/casl/casl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { CaslAbilityFactory } from './casl-ability.factory';\n\n@Global() // Make CASL module global to be available in other modules without importing\n@Module({\n    providers: [CaslAbilityFactory],\n    exports: [CaslAbilityFactory],\n})\nexport class CaslModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/create-article.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                isPublished\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'This is the content of my first article.', description: 'The content of the article'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/create-article.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: false, description: 'Whether the article is published', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/create-article.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'My First Article', description: 'The title of the article'})@IsNotEmpty()@IsString()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/articles/dto/create-article.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MinLength, IsOptional, IsBoolean } from 'class-validator';\n\nexport class CreateArticleDto {\n    @ApiProperty({ example: 'My First Article', description: 'The title of the article' })\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(3)\n    title: string;\n\n    @ApiProperty({ example: 'This is the content of my first article.', description: 'The content of the article' })\n    @IsNotEmpty()\n    @IsString()\n    content: string;\n\n    @ApiProperty({ example: false, description: 'Whether the article is published', required: false })\n    @IsOptional()\n    @IsBoolean()\n    isPublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/jwt.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersService } from '../users/users.service';\nimport { User } from '../users/entities/user.entity';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(private usersService: UsersService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: 'yourSecretKey', // Replace with your actual secret key, same as in AuthModule\n        });\n    }\n\n    async validate(payload: { sub: number; email: string; username: string }): Promise> {\n        const user = await this.usersService.findOneById(payload.sub);\n        if (!user) {\n            throw new UnauthorizedException();\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { password, ...result } = user;\n        return result;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginAuthDto.html":{"url":"classes/LoginAuthDto.html","title":"class - LoginAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'prakashbahadurchand@gmail.com', description: 'The email of the user'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login-auth.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345678', description: 'The password of the user'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login-auth.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class LoginAuthDto {\n    @ApiProperty({ example: 'prakashbahadurchand@gmail.com', description: 'The email of the user' })\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty({ example: '12345678', description: 'The password of the user' })\n    @IsNotEmpty()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...', description: 'Access token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginResponseDto {\n    @ApiProperty({ example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...', description: 'Access token' })\n    accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterAuthDto.html":{"url":"classes/RegisterAuthDto.html","title":"class - RegisterAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'prakashbahadurchand@gmail.com', description: 'The email of the user'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register-auth.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345678', description: 'The password of the user'})@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register-auth.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'prakashbahadurchand', description: 'The username of the user'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register-auth.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\n\nexport class RegisterAuthDto {\n    @ApiProperty({ example: 'prakashbahadurchand', description: 'The username of the user' })\n    @IsNotEmpty()\n    username: string;\n\n    @ApiProperty({ example: 'prakashbahadurchand@gmail.com', description: 'The email of the user' })\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @ApiProperty({ example: '12345678', description: 'The password of the user' })\n    @IsNotEmpty()\n    @MinLength(6)\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseTransformInterceptor.html":{"url":"injectables/ResponseTransformInterceptor.html","title":"injectable - ResponseTransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseTransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/common/interceptors/response-transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/common/interceptors/response-transform.interceptor.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, HttpException, HttpStatus } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ApiResponseDto } from '../dto/api-response.dto';\n\n@Injectable()\nexport class ResponseTransformInterceptor implements NestInterceptor> {\n    intercept(context: ExecutionContext, next: CallHandler): Observable> {\n        const httpContext = context.switchToHttp();\n        const response = httpContext.getResponse();\n        const request = httpContext.getRequest();\n\n        return next.handle().pipe(\n            map(data => {\n                const statusCode = response.statusCode || HttpStatus.OK;\n\n                if (request.method === 'DELETE' && statusCode === HttpStatus.NO_CONTENT) {\n                    response.status(HttpStatus.OK);\n                    return new ApiResponseDto(HttpStatus.OK, 'Successfully deleted');\n                }\n\n                // Check if data is already in our ApiResponseDto format (e.g. from a service)\n                if (data && typeof data === 'object' && 'statusCode' in data && 'message' in data) {\n                    return data as ApiResponseDto;\n                }\n\n                // If data is a simple message string (e.g. from logout)\n                if (typeof data === 'object' && data !== null && 'message' in data && Object.keys(data).length === 1) {\n                    return new ApiResponseDto(statusCode, data.message, undefined);\n                }\n\n                return new ApiResponseDto(statusCode, 'Success', data);\n            }),\n            catchError(err => {\n                const statusCode =\n                    err instanceof HttpException\n                        ? err.getStatus()\n                        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n                let message = 'Internal server error';\n                let errorDetail = err.message; // Default to err.message\n\n                if (err instanceof HttpException) {\n                    const errResponse = err.getResponse();\n                    message = (typeof errResponse === 'object' && errResponse !== null && 'message' in errResponse)\n                        ? (errResponse as any).message\n                        : err.message;\n                    if (typeof errResponse === 'object' && errResponse !== null && 'error' in errResponse) {\n                        errorDetail = (errResponse as any).error;\n                    }\n                    // For class-validator, message might be an array\n                    if (Array.isArray(message)) {\n                        errorDetail = message.join(', ');\n                        message = 'Validation failed'; // Generic message for validation errors\n                    }\n                }\n                // Ensure the response is an instance of ApiResponseDto for errors too.\n                // This requires modifying how NestJS handles exceptions, ideally with a custom ExceptionFilter.\n                // For now, the interceptor primarily formats successful responses.\n                // To truly enforce this for errors, an ExceptionFilter is needed.\n                // This interceptor will shape the error re-thrown if it's an HttpException.\n                // For other errors, it will be a generic internal server error.\n\n                // We will create an ApiResponseDto and throw it as part of an HttpException\n                // This is a common pattern to ensure the response body is consistent.\n                const apiResponseError = new ApiResponseDto(statusCode, message, null, errorDetail || message);\n                throw new HttpException(apiResponseError, statusCode);\n            }),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArticleDto.html":{"url":"classes/UpdateArticleDto.html","title":"class - UpdateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/articles/dto/update-article.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateArticleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateArticleDto } from './create-article.dto';\n\nexport class UpdateArticleDto extends PartialType(CreateArticleDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                articles\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        articles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Article[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, article => article.author)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'simple-array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToMany } from 'typeorm';\nimport { Article } from '../../articles/entities/article.entity';\n\nexport enum Role {\n    ADMIN = 'admin',\n    AUTHOR = 'author',\n    READER = 'reader',\n}\n\n@Entity()\nexport class User {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({ unique: true })\n    username: string;\n\n    @Column({ unique: true })\n    email: string;\n\n    @Column({ select: false }) // Prevent password from being selected by default\n    password?: string;\n\n    @Column({\n        type: 'simple-array',\n    })\n    roles: Role[];\n\n    @OneToMany(() => Article, article => article.author)\n    articles: Article[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Get all users (requires authentication)'})@ApiResponse({status: 200, description: 'List of users.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Get current user profile (requires authentication)'})@ApiResponse({status: 200, description: 'Current user data.', type: undefined})@ApiResponse({status: 401, description: 'Unauthorized.', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards, Req } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { User } from './entities/user.entity';\nimport { Request } from 'express';\nimport { ApiResponseDto } from '../../core/common/dto/api-response.dto';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n    constructor(private readonly usersService: UsersService) { }\n\n    @Get()\n    @UseGuards(AuthGuard('jwt'))\n    @ApiBearerAuth()\n    @ApiOperation({ summary: 'Get all users (requires authentication)' })\n    @ApiResponse({ status: 200, description: 'List of users.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    async findAll(@Req() req: Request): Promise[]> {\n        console.log('Authenticated user:', req.user); // req.user will be populated by JwtStrategy\n        return this.usersService.findAll();\n    }\n\n    // Example of a protected route that returns the current user\n    @Get('profile')\n    @UseGuards(AuthGuard('jwt'))\n    @ApiBearerAuth()\n    @ApiOperation({ summary: 'Get current user profile (requires authentication)' })\n    @ApiResponse({ status: 200, description: 'Current user data.', type: ApiResponseDto })\n    @ApiResponse({ status: 401, description: 'Unauthorized.', type: ApiResponseDto })\n    getProfile(@Req() req: Request) {\n        return req.user; // req.user is populated by Passport after successful JWT validation\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { User } from './entities/user.entity';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([User])],\n    providers: [UsersService],\n    exports: [UsersService],\n    controllers: [UsersController],\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(registerAuthDto: RegisterAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerAuthDto\n                                            \n                                                            RegisterAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User, Role } from './entities/user.entity'; // Import Role enum\nimport { RegisterAuthDto } from '../auth/dto/register-auth.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UsersService {\n    constructor(\n        @InjectRepository(User)\n        private usersRepository: Repository,\n    ) { }\n\n    async findOneByEmail(email: string): Promise {\n        return this.usersRepository.findOne({ where: { email } });\n    }\n\n    async findOneById(id: number): Promise {\n        return this.usersRepository.findOne({ where: { id } });\n    }\n\n    async create(registerAuthDto: RegisterAuthDto): Promise {\n        const hashedPassword = await bcrypt.hash(registerAuthDto.password, 10);\n        const newUser = this.usersRepository.create({\n            ...registerAuthDto,\n            password: hashedPassword,\n            roles: [Role.READER], // Explicitly set default role here\n        });\n        await this.usersRepository.save(newUser);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { password, ...result } = newUser;\n        return result as User;\n    }\n\n    async findAll(): Promise[]> {\n        const users = await this.usersRepository.find();\n        return users.map(user => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { password, ...result } = user;\n            return result;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/core/common/dto/api-response.dto.ts\n            \n            class\n            ApiResponseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/common/interceptors/response-transform.interceptor.ts\n            \n            injectable\n            ResponseTransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/core/database/seeds/run-seed.ts\n            \n            function\n            runSeed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/data-source.ts\n            \n            variable\n            dataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/data-source.ts\n            \n            variable\n            dataSourceOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.controller.ts\n            \n            controller\n            ArticlesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/articles/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/articles/dto/update-article.dto.ts\n            \n            class\n            UpdateArticleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/articles/entities/article.entity.ts\n            \n            entity\n            Article\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login-auth.dto.ts\n            \n            class\n            LoginAuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register-auth.dto.ts\n            \n            class\n            RegisterAuthDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/casl/casl-ability.factory.ts\n            \n            injectable\n            CaslAbilityFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/modules/casl/casl-ability.factory.ts\n            \n            type alias\n            AppAbility\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/modules/casl/casl-ability.factory.ts\n            \n            type alias\n            Subjects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^6.7.3\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcrypt : ^6.0.0\n        \n            class-validator : ^0.14.2\n        \n            mysql2 : ^3.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.24\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            Role   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/casl/casl-ability.factory.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                        \n                            \n                                 Manage\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n            \n        \n\n    src/modules/users/entities/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 AUTHOR\n                            \n                        \n                        \n                            \n                                Value : author\n                            \n                        \n                        \n                            \n                                 READER\n                            \n                        \n                        \n                            \n                                Value : reader\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            runSeed   (src/.../run-seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/database/seeds/run-seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        runSeed\n                        \n                    \n                \n            \n            \n                \nrunSeed()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNestJS CASL & TypeORM Boilerplate\nThis project is a NestJS starter boilerplate demonstrating a robust setup for building RESTful APIs. It includes Authentication (JWT), User & Article Management, Role-Based Access Control (RBAC) with CASL, TypeORM with MySQL (including migrations and seeding), Swagger API documentation, and standardized API responses.\nOverview\nKey features:\n\nAuthentication: Secure user registration, login, and logout using JWT.\nUser Management: Basic CRUD operations for user profiles.\nArticle Management: Full CRUD for articles, including publishing status.\nPermissions: Fine-grained access control with CASL (Admin, Author, Reader roles).\nDatabase: MySQL integration via TypeORM, with CLI support for migrations and data seeding.\nAPI Documentation: Interactive API docs via Swagger at /api.\nStandard Responses: Uniform JSON structure for all API responses.\n\nPrerequisites\n\nNode.js (v18 or higher recommended)\nNPM (or Yarn)\nMySQL Server\n\nGetting Started\n1. Clone & Install\nExample :# Clone the repository (replace with your actual URL if different)\ngit clone https://github.com/your-username/nestjs-roles-and-permissions-using-casl.git\ncd nestjs-roles-and-permissions-using-casl\n\n# Install dependencies\nnpm install2. Environment Configuration\n\nDatabase: Ensure MySQL is running. Create a database (e.g., nestjs_casl_demo).\nCredentials: Update DB connection details in src/app.module.ts and src/data-source.ts (host, port, username, password, database).\nJWT Secret: Change the secret in src/modules/auth/auth.module.ts for JwtModule.register.\n\nRecommendation: Use environment variables for sensitive data in production (@nestjs/config).\n3. Database Setup (Migrations & Seeding)\nEnsure synchronize: false is set in src/app.module.ts for TypeORM.\nExample :// src/app.module.ts\nTypeOrmModule.forRoot({\n  // ... other options\n  synchronize: false, // Crucial for migrations\n}),Then, run:\nExample :# Generate initial migration (creates User & Article tables)\nnpm run migration:generate --name=InitialEntities\n\n# Apply migrations\nnpm run migration:run\n\n# Populate with seed data\nnpm run seed:runDefault seeded user credentials:\n\nAdmin: admin / Admin@123\nAuthor: author1 / Author@123\nReader: reader1 / Reader@123\n\nTo revert the last migration:\nExample :npm run migration:revert4. Running the Application\nExample :# Development mode with watch\nnpm run start:devAccess at http://localhost:3000. Swagger docs at http://localhost:3000/api.\nKey NPM Scripts\n\nnpm run start:dev: Dev mode.\nnpm run build: Production build.\nnpm run format: Format code.\nnpm run lint: Lint code.\nnpm test: Unit tests.\nnpm test:e2e: E2E tests.\nnpm run typeorm -- : TypeORM CLI (e.g., migration:show).\n\nProject Structure\n\nsrc/main.ts: App entry, Swagger.\nsrc/app.module.ts: Root module, TypeORM config.\nsrc/data-source.ts: TypeORM CLI config.\nsrc/core/common/: Shared DTOs, interceptors.\nsrc/core/database/: Migrations, seeds.\nsrc/modules/: Feature modules (Auth, Users, Articles, CASL).\n\nCore Features & Endpoints\n\nAuthentication:\nPOST /auth/register\nPOST /auth/login\nPOST /auth/logout\n\n\nUsers & Articles: CRUD (see Swagger).\nPermissions (CASL):\nAdmin: Full control.\nAuthor: Create articles; manage own articles.\nReader: Read articles; update own profile.\n\n\nAPI Response Format:\n\nExample :{\n  \"statusCode\": 200,\n  \"message\": \"Success\",\n  \"data\": { /* payload */ },\n  \"error\": null\n}\nOriginal NestJS Starter Documentation\n(Generic info from default NestJS starter README)\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :npm installRunning the app\nExample :# development\nnpm run start\n\n# watch mode\nnpm run start:dev\n\n# production mode\nnpm run start:prodTest\nExample :# unit tests\nnpm run test\n\n# e2e tests\nnpm run test:e2e\n\n# test coverage\nnpm run test:covFor generate doc\nExample :npx @compodoc/compodoc -p tsconfig.json -sSupport\nNest is an MIT-licensed open source project. More info: NestJS Support.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticlesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ArticlesModule\n\n\n\ncluster_ArticlesModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nArticlesModule\n\nArticlesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nArticlesModule -->\n\nCaslModule->ArticlesModule\n\n\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nArticlesService\n\nArticlesService\n\nArticlesModule -->\n\nArticlesService->ArticlesModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            Subjects   (src/.../casl-ability.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/casl/casl-ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        PureAbility<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                            InferSubjects | \"all\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            dataSource   (src/.../data-source.ts)\n                        \n                        \n                            dataSourceOptions   (src/.../data-source.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(dataSourceOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourceOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'mysql',\n    host: process.env.DB_HOST || 'localhost',\n    port: parseInt(process.env.DB_PORT || '3306', 10),\n    username: process.env.DB_USERNAME || 'root',\n    password: process.env.DB_PASSWORD || 'toor', // Consistent with app.module.ts default\n    database: process.env.DB_DATABASE || 'nestjs_casl_demo', // Consistent with app.module.ts\n    entities: [User, Article],\n    migrations: [__dirname + '/core/database/migrations/*{.ts,.js}'], // Path to your migrations\n    synchronize: false, // IMPORTANT: Should be false when using migrations\n    logging: process.env.NODE_ENV === 'development',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
